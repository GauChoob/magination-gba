// Magi Nation
// #ID = 13941

// GBADoc: https://gbadev.net/gbadoc/intro.html
// no$gba reference: http://problemkaputt.de/gbatek-gba-reference.htm

// Gameboy Advance Memory map: https://github.com/RetroAchievements/rcheevos/blob/develop/src/rcheevos/consoleinfo.c#L449
// static const rc_memory_region_t _rc_memory_regions_gameboy_advance[] = {
//    { 0x000000U, 0x007FFFU, 0x03000000U, RC_MEMORY_TYPE_SYSTEM_RAM, "System RAM" }, /* 32KB  Internal Work RAM */
//    { 0x008000U, 0x047FFFU, 0x02000000U, RC_MEMORY_TYPE_SYSTEM_RAM, "System RAM" }, /* 256KB External Work RAM */
//    { 0x048000U, 0x057FFFU, 0x0E000000U, RC_MEMORY_TYPE_SAVE_RAM, "Save RAM" }      /* 64KB  Game Pak SRAM */
//};


////////////
// Memory //
////////////

GBA_EWRAM = 0x02000000
GBA_NONSTATIC_HEAP_START = 0x02000400
GBA_NONSTATIC_HEAP_END = 0x02027610
GBA_IWRAM = 0x03000000
GBA_EEPROM = 0x0E000000
RETRO_EWRAM = 0x008000
RETRO_IWRAM = 0x000000
RETRO_EEPROM = 0x048000
SIZE_EWRAM = 0x040000
SIZE_IWRAM = 0x008000
SIZE_EEPROM = 0x002000
THROW_ERROR = 0x88888888
// Maps a GBA memory address to a RetroAchievements memory address
// map(0x03000000) -> 0x000000
// map(0x02000000) -> 0x008000
// map(0x0E000000) -> 0x048000
// Returns garbage value (THROW_ERROR) for memory addresses within the nonstatic part of the heap, or for unmapped addresses
function map(address) {
    if(address >= GBA_IWRAM && address <= GBA_IWRAM + SIZE_IWRAM)
        return address - GBA_IWRAM + RETRO_IWRAM
    if(address >= GBA_NONSTATIC_HEAP_START && address < GBA_NONSTATIC_HEAP_END)
        return THROW_ERROR
    if(address >= GBA_EWRAM && address <= GBA_EWRAM + SIZE_EWRAM)
        return address - GBA_EWRAM + RETRO_EWRAM
    if(address >= GBA_EEPROM && address <= GBA_EEPROM + SIZE_EEPROM)
        return address - GBA_EEPROM + RETRO_EEPROM
    return THROW_ERROR
}

// Dereference an address containing a pointer to the heap
// We use dword and subtract GBA_EWRAM so that null pointers point outside of the
// addressing scheme and return a value of 0.
// If we use tbyte and just add a positive offset, null pointers will resolve a
// value from the beginning of the memory map, which leaks random data and could
// potentially cause false triggers
function pointer(address, offset) =>
    dword(address) - GBA_EWRAM + RETRO_EWRAM + offset


// Traverse through a linked list and return the nth entry
// Should return 0 if entry is not defined
LinkedListStruct_NextNode = 0x00
LinkedListStruct_PrevNode = 0x04
LinkedListStruct_Struct = 0x08
function _traverse_n_linked_list_nodes(n, linked_list) {
    if(n == 1)
        return linked_list
    else
        return pointer(_traverse_n_linked_list_nodes(n-1, linked_list), LinkedListStruct_NextNode)
}
function get_nth_linked_list_entry(n, linked_list) {
    return pointer(_traverse_n_linked_list_nodes(n, linked_list), LinkedListStruct_Struct)
}

// Copy of the 2 above functions, but recursively added prev()
function _prev_traverse_n_linked_list_nodes(n, linked_list) {
    if(n == 1)
        return linked_list
    else
        return prev(pointer(_traverse_n_linked_list_nodes(n-1, linked_list), LinkedListStruct_NextNode))
}
function prev_get_nth_linked_list_entry(n, linked_list) {
    return prev(pointer(_traverse_n_linked_list_nodes(n, linked_list), LinkedListStruct_Struct))
}

// Prev functions
// n.b. we can't use these functions on pointers, we need to manually define a prev_pointer function.
function increments(var) =>
    var - prev(var) == 1

function increases(var) =>
    prev(var) < var

function decreases(var) =>
    prev(var) > var

function changes(var) =>
    prev(var) != var

function changes_from_to(var, previous, current) =>
    prev(var) == previous && var == current

function changes_from(var, previous) =>
    prev(var) == previous && var != previous

function changes_to(var, current) =>
    prev(var) != current && var == current

// Verify a collection. In our use case, the difference in value between the previous and current frame is always one.
function collection(collection, length) =>
    (sum_of(collection, x => prev(x)) == length - 1) && measured(sum_of(collection, x => x) == length, when=game_loaded())


/////////////////
// Script Vars //
/////////////////

// Script_Treasure and Script_SaveBits
// Autogenerated by var_to_rascript.py
Treasure_Naroom_2AB4 = bitcount(map(0x03002AB4))  // excluding bit7(map(0x03002AB4)), bit6(map(0x03002AB4)), bit2(map(0x03002AB4))
NRMVASH15_Chest1 = bit5(map(0x03002AB4))
NRMVASH19_Chest1 = bit4(map(0x03002AB4))
NRMVASH14_Chest2 = bit3(map(0x03002AB4))
NRMRIVER02_Chest1 = bit1(map(0x03002AB4))
NRMRIVER02_Chest2 = bit0(map(0x03002AB4))
Treasure_Naroom_2AB5 = bitcount(map(0x03002AB5))  // excluding bit4(map(0x03002AB5))
NRMVASH09_Chest1 = bit7(map(0x03002AB5))
NRMVASH17_Chest1 = bit6(map(0x03002AB5))
NRMVASH18_Chest1 = bit5(map(0x03002AB5))
NRMGLADE07_Chest1 = bit3(map(0x03002AB5))
NRMFOREST05_Chest1 = bit2(map(0x03002AB5))
NRMFOREST06_Chest1 = bit1(map(0x03002AB5))
WVEPATHVALLEY08_Chest1 = bit0(map(0x03002AB5))
Treasure_Orothe_2AB6 = bitcount(map(0x03002AB6))  // excluding NRMGLADE04_Chest1, NRMLAKE02_Chest1, NRMFOREST04_Chest1
NRMGLADE04_Chest1 = bit7(map(0x03002AB6))
NRMLAKE02_Chest1 = bit6(map(0x03002AB6))
NRMFOREST04_Chest1 = bit5(map(0x03002AB6))
OROTUNNEL05_Chest1 = bit4(map(0x03002AB6))
OROTUNNEL05_Chest2 = bit3(map(0x03002AB6))
OROTUNNEL04_Chest1 = bit2(map(0x03002AB6))
OROTUNNEL03_Chest1 = bit1(map(0x03002AB6))
OROTUNNEL08_Chest1 = bit0(map(0x03002AB6))
Treasure_NaroomGeyser_2AB7 = bitcount(map(0x03002AB7))  // excluding WVEPATHVALLEY05_Chest1, WVEPATHVALLEY02_Chest1, NRMGLADE05_Chest1
WVEPATHVALLEY05_Chest1 = bit7(map(0x03002AB7))
WVEPATHVALLEY02_Chest1 = bit6(map(0x03002AB7))
NRMGLADE05_Chest1 = bit5(map(0x03002AB7))
NRMGEYSER02_Chest1 = bit4(map(0x03002AB7))
NRMGEYSER03_Chest1 = bit3(map(0x03002AB7))
NRMGEYSER04_Chest1 = bit2(map(0x03002AB7))
NRMGEYSER06_Chest1 = bit1(map(0x03002AB7))
NRMGEYSER07_Chest1 = bit0(map(0x03002AB7))
Treasure_Underneath_2AB8 = bitcount(map(0x03002AB8))  // excluding bit7(map(0x03002AB8)), WVEGIASHUT02_Chest1
WVEGIASHUT02_Chest1 = bit6(map(0x03002AB8))
UNDTUNNEL06_Chest1 = bit5(map(0x03002AB8))
UNDTUNNEL06_Chest2 = bit4(map(0x03002AB8))
UNDTUNNEL12_Chest1 = bit3(map(0x03002AB8))
UNDTUNNEL17_Chest1 = bit2(map(0x03002AB8))
UNDTUNNEL20_Chest1 = bit1(map(0x03002AB8))
UNDTUNNEL20_Chest2 = bit0(map(0x03002AB8))
UNDCAVERN02_Chest1 = bit7(map(0x03002AB9))
UNDCAVERN02_Chest2 = bit6(map(0x03002AB9))
UNDCAVERN03_Chest1 = bit5(map(0x03002AB9))
UNDGEYSER01_Chest1 = bit3(map(0x03002AB9))
UNDGEYSER02_Chest1 = bit1(map(0x03002AB9))
UNDGEYSER02_Chest2 = bit0(map(0x03002AB9))
Treasure_UnderneathGeyser_2ABA = bitcount(map(0x03002ABA))  // excluding bit0(map(0x03002ABA))
UNDGEYSER02_Chest3 = bit7(map(0x03002ABA))
UNDGEYSER02_Chest4 = bit6(map(0x03002ABA))
UNDGEYSER02_Chest5 = bit5(map(0x03002ABA))
UNDGEYSER02_Chest6 = bit4(map(0x03002ABA))
UNDGEYSER08_Chest1 = bit3(map(0x03002ABA))
UNDGEYSER08_Chest2 = bit2(map(0x03002ABA))
UNDGEYSER08_Chest3 = bit1(map(0x03002ABA))
Treasure_Cald_2ABB = bitcount(map(0x03002ABB))  // excluding UNDGEYSER08_Chest5, bit6(map(0x03002ABB))
UNDGEYSER08_Chest5 = bit7(map(0x03002ABB))
CLDLAVATOWN09_CHEST1 = bit5(map(0x03002ABB))
CLDLAVATOWN11_CHEST1 = bit4(map(0x03002ABB))
CLDLAVATUBE03_CHEST1 = bit3(map(0x03002ABB))
CLDLAVATUBE06_CHEST1 = bit2(map(0x03002ABB))
CLDLAVATUBE06_CHEST2 = bit1(map(0x03002ABB))
CLDLAVATUBE09_CHEST1 = bit0(map(0x03002ABB))
CLDLAVATUBE09_CHEST2 = bit7(map(0x03002ABC))
CLDLAVATUBE09_CHEST3 = bit6(map(0x03002ABC))
CLDLAVATUBE10_CHEST1 = bit5(map(0x03002ABC))
CLDLAVATUBE10_CHEST2 = bit4(map(0x03002ABC))
Treasure_Orothe_2ABD = bitcount(map(0x03002ABD))  // excluding CLDLAVAVENT02_CHEST1, CLDLAVAVENT03_CHEST1
CLDLAVAVENT02_CHEST1 = bit7(map(0x03002ABD))
CLDLAVAVENT03_CHEST1 = bit6(map(0x03002ABD))
OROTUNNEL08_Chest2 = bit5(map(0x03002ABD))
OROTUNNEL08_Chest3 = bit4(map(0x03002ABD))
OROTUNNEL06_Chest1 = bit3(map(0x03002ABD))
OROTUNNEL06_Chest2 = bit2(map(0x03002ABD))
ORORUINS01_Chest1 = bit1(map(0x03002ABD))
ORORUINS01_Chest2 = bit0(map(0x03002ABD))
Treasure_Orothe_2ABE = bitcount(map(0x03002ABE))  // excluding bit6(map(0x03002ABE))
ORORUINS02_Chest1 = bit7(map(0x03002ABE))
ORORUINS02_Chest3 = bit5(map(0x03002ABE))
ORORUINS02_Chest4 = bit4(map(0x03002ABE))
ORORUINS03_Chest1 = bit3(map(0x03002ABE))
ORORUINS03_Chest2 = bit2(map(0x03002ABE))
ORORUINS03_Chest3 = bit1(map(0x03002ABE))
ORORUINS03_Chest4 = bit0(map(0x03002ABE))
ORORUINS03_Chest5 = bit7(map(0x03002ABF))
NRMVASH12_Empty = bit2(map(0x03002ABF))
NRMVASH12_Chest1 = bit1(map(0x03002ABF))
NRMVASH22_Chest1 = bit0(map(0x03002ABF))
CLDLAVAVENT03_CHEST2 = bit7(map(0x03002AC0))
CLDLAVAVENT04_CHEST1 = bit6(map(0x03002AC0))
HLDCELL04Chest1 = bit4(map(0x03002AC0))
HLDMAZE06Chest1 = bit2(map(0x03002AC0))
HLDMAZE08Chest1 = bit1(map(0x03002AC0))
HLDMAZE08Chest2 = bit0(map(0x03002AC0))
Treasure_Shadowhold_2AC1 = bitcount(map(0x03002AC1))  // excluding bit7(map(0x03002AC1)), bit3(map(0x03002AC1)), bit1(map(0x03002AC1))
HLDMAZE10Chest1 = bit6(map(0x03002AC1))
HLDMAZE10Chest2 = bit5(map(0x03002AC1))
HLDMAZE11Chest1 = bit4(map(0x03002AC1))
HLDMAZE16Chest1 = bit2(map(0x03002AC1))
HLDMAZE20Chest1 = bit0(map(0x03002AC1))
HLDMAZE21Chest1 = bit7(map(0x03002AC2))
HLDMAZE04Chest2 = bit5(map(0x03002AC2))
WVEPATHVALLEY02_Chest2 = bit0(map(0x03002AC2))
Treasure_CaldGeyser_2AC3 = bitcount(map(0x03002AC3))
CLDGEYSER02_Chest19 = bit7(map(0x03002AC3))
CLDGEYSER02_Chest9 = bit6(map(0x03002AC3))
CLDGEYSER02_Chest10 = bit5(map(0x03002AC3))
CLDGEYSER02_Chest11 = bit4(map(0x03002AC3))
CLDGEYSER02_Chest3 = bit3(map(0x03002AC3))
CLDGEYSER02_Chest1 = bit2(map(0x03002AC3))
CLDGEYSER02_Chest17 = bit1(map(0x03002AC3))
CLDGEYSER02_Chest13 = bit0(map(0x03002AC3))
CLDGEYSER02_Chest14 = bit7(map(0x03002AC4))
CLDGEYSER03_Chest12 = bit0(map(0x03002AC4))
CLDGEYSER03_Chest4 = bit7(map(0x03002AC5))
CLDGEYSER03_Chest1 = bit6(map(0x03002AC5))
CLDGEYSER03_Chest9 = bit5(map(0x03002AC5))
CLDGEYSER03_Chest8 = bit4(map(0x03002AC5))
Treasure_OrotheGeyser_2AC6 = bitcount(map(0x03002AC6))  // excluding bit7(map(0x03002AC6)), bit6(map(0x03002AC6))
OROGEYSER10_Chest1 = bit5(map(0x03002AC6))
OROGEYSER10_Chest2 = bit4(map(0x03002AC6))
OROGEYSER10_Chest3 = bit3(map(0x03002AC6))
OROGEYSER10_Chest4 = bit2(map(0x03002AC6))
OROGEYSER10_Chest5 = bit1(map(0x03002AC6))
OROGEYSER10_Chest6 = bit0(map(0x03002AC6))
Treasure_OrotheGeyser_2AC7 = bitcount(map(0x03002AC7))  // excluding bit4(map(0x03002AC7)), bit3(map(0x03002AC7)), bit1(map(0x03002AC7))
OROGEYSER10_Chest7 = bit7(map(0x03002AC7))
OROGEYSER10_Chest8 = bit6(map(0x03002AC7))
OROGEYSER10_Chest9 = bit5(map(0x03002AC7))
OROGEYSER08_Chest3 = bit2(map(0x03002AC7))
OROGEYSER09_Chest1 = bit0(map(0x03002AC7))
Treasure_ArderialGeyser_2AC8 = bitcount(map(0x03002AC8))
ARDGEYSER01_Chest1 = bit7(map(0x03002AC8))
ARDGEYSER02_Chest2 = bit6(map(0x03002AC8))
ARDGEYSER02_Chest1 = bit5(map(0x03002AC8))
ARDGEYSER02_Chest10 = bit4(map(0x03002AC8))
ARDGEYSER02_Chest6 = bit3(map(0x03002AC8))
ARDGEYSER02_Chest3 = bit2(map(0x03002AC8))
ARDGEYSER02_Chest4 = bit1(map(0x03002AC8))
ARDGEYSER02_Chest5 = bit0(map(0x03002AC8))
Treasure_ArderialGeyser_2AC9 = bitcount(map(0x03002AC9))  // excluding UNDGEYSER07_Chest1, UNDGEYSER06_Chest1, UNDGEYSER06_Chest2
ARDGEYSER19_Chest3 = bit7(map(0x03002AC9))
ARDGEYSER19_Chest4 = bit6(map(0x03002AC9))
ARDGEYSER19_Chest1 = bit5(map(0x03002AC9))
ARDGEYSER19_Chest2 = bit4(map(0x03002AC9))
ARDGEYSER19_Chest5 = bit3(map(0x03002AC9))
UNDGEYSER07_Chest1 = bit2(map(0x03002AC9))
UNDGEYSER06_Chest1 = bit1(map(0x03002AC9))
UNDGEYSER06_Chest2 = bit0(map(0x03002AC9))
UNDGEYSER05_Chest1 = bit7(map(0x03002ACA))
ARDGEYSER18_Chest2 = bit0(map(0x03002ACA))
Treasure_ArderialGeyser_2ACB = bitcount(map(0x03002ACB))
ARDGEYSER18_Chest1 = bit7(map(0x03002ACB))
ARDGEYSER24_Chest1 = bit6(map(0x03002ACB))
ARDGEYSER25_Chest1 = bit5(map(0x03002ACB))
ARDGEYSER12_Chest1 = bit4(map(0x03002ACB))
ARDGEYSER11_Chest1 = bit3(map(0x03002ACB))
ARDGEYSER10_Chest1 = bit2(map(0x03002ACB))
ARDGEYSER09_Chest1 = bit1(map(0x03002ACB))
ARDGEYSER08_Chest1 = bit0(map(0x03002ACB))
Treasure_ArderialGeyser_2ACC = bitcount(map(0x03002ACC))  // excluding bit2(map(0x03002ACC)), bit1(map(0x03002ACC)), bit0(map(0x03002ACC))
ARDGEYSER07_Chest1 = bit7(map(0x03002ACC))
ARDGEYSER06_Chest1 = bit6(map(0x03002ACC))
ARDGEYSER05_Chest2 = bit5(map(0x03002ACC))
ARDGEYSER04_Chest1 = bit4(map(0x03002ACC))
ARDGEYSER03_Chest1 = bit3(map(0x03002ACC))
Treasure_ArderialGeyser_2ACD = bitcount(map(0x03002ACD))  // excluding bit7(map(0x03002ACD)), OROGEYSER01_Chest1, OROGEYSER01_Chest2
OROGEYSER01_Chest1 = bit6(map(0x03002ACD))
OROGEYSER01_Chest2 = bit5(map(0x03002ACD))
ARDGEYSER10_Chest2 = bit4(map(0x03002ACD))
ARDGEYSER05_Chest1 = bit3(map(0x03002ACD))
ARDGEYSER12_Chest2 = bit2(map(0x03002ACD))
ARDGEYSER25_Chest2 = bit1(map(0x03002ACD))
ARDGEYSER25_Chest3 = bit0(map(0x03002ACD))
Treasure_ArderialGeyser_2ACE = bitcount(map(0x03002ACE))  // excluding bit7(map(0x03002ACE)), bit2(map(0x03002ACE))
ARDGEYSER23_Chest1 = bit6(map(0x03002ACE))
ARDGEYSER23_Chest3 = bit5(map(0x03002ACE))
ARDGEYSER23_Chest2 = bit4(map(0x03002ACE))
ARDGEYSER23_Chest4 = bit3(map(0x03002ACE))
ARDGEYSER27_Chest1 = bit1(map(0x03002ACE))
ARDGEYSER14_Chest1 = bit0(map(0x03002ACE))
Treasure_ArderialGeyser_2ACF = bitcount(map(0x03002ACF))  // excluding bit2(map(0x03002ACF))
ARDGEYSER14_Chest2 = bit7(map(0x03002ACF))
ARDGEYSER14_Chest3 = bit6(map(0x03002ACF))
ARDGEYSER15_Chest1 = bit5(map(0x03002ACF))
ARDGEYSER15_Chest2 = bit4(map(0x03002ACF))
ARDGEYSER15_Chest3 = bit3(map(0x03002ACF))
ARDGEYSER16_Chest1 = bit1(map(0x03002ACF))
ARDGEYSER16_Chest2 = bit0(map(0x03002ACF))
NRMVASH10_Chest1 = bit7(map(0x03002AD0))
OROTUNNEL10_Chest2 = bit5(map(0x03002AD0))
UNDGEYSER03_Chest1 = bit4(map(0x03002AD0))
NRMLAKE01_Chest1 = bit2(map(0x03002AD0))
NRMLAKE01_Chest2 = bit1(map(0x03002AD0))
NRMFOREST07_Chest1 = bit0(map(0x03002AD0))
UNDMUSHFARM03_Chest1 = bit6(map(0x03002AD1))
CLDLAVAVENT08_Chest1 = bit4(map(0x03002AD1))
HDNROOM04_Chest1 = bit4(map(0x03002AD2))
HDNROOM04_Chest3 = bit2(map(0x03002AD2))
OVRSURFACE01B_Chest1 = bit1(map(0x03002AD2))
NRMLAKE04_Chest1 = bit0(map(0x03002AD2))
CLDLAVATUBE10_CHEST_GBA = bit5(map(0x03002AD3))
HDNUNDTUN02_Chest1 = bit2(map(0x03002AD3))
HDNUNDTUN01_Chest1 = bit1(map(0x03002AD3))
HDNUNDTUN01_Chest2 = bit0(map(0x03002AD3))
FORT02_Chest1 = bit4(map(0x03002AD4))
HDNLAVATUBE03_Chest1 = bit3(map(0x03002AD4))
HDNLAVATUBE03_Chest2 = bit2(map(0x03002AD4))
HDNLAVATUBE03_Chest3 = bit1(map(0x03002AD4))
HDNLAVATUBE03_Chest4 = bit0(map(0x03002AD4))
HDNLAVATUBE03_Chest5 = bit7(map(0x03002AD5))
HDNLAVATUBE03_Chest6 = bit6(map(0x03002AD5))
HDNLAVATUBE03_Chest7 = bit5(map(0x03002AD5))
ARDGARDEN01_Chest1 = bit7(map(0x03002AD6))
OROCORAL05_Chest1 = bit5(map(0x03002AD6))
OROCORAL05_Chest2 = bit4(map(0x03002AD6))
OROCORAL05_Chest3 = bit3(map(0x03002AD6))
OROCORAL02_Chest1 = bit4(map(0x03002AD7))
OROCORAL02_Chest2 = bit3(map(0x03002AD7))
OROCORAL02_Chest3 = bit2(map(0x03002AD7))
Treasure_Shadowhold_2AD8 = bitcount(map(0x03002AD8))  // excluding bit7(map(0x03002AD8)), OROCORAL05_Empty, HLDMAZE23_Chest1
OROCORAL05_Empty = bit6(map(0x03002AD8))
HldChest1 = bit5(map(0x03002AD8))
HldChest2 = bit4(map(0x03002AD8))
HLDMAZE23_Chest1 = bit3(map(0x03002AD8))
HldChest4 = bit2(map(0x03002AD8))
HldChest5 = bit1(map(0x03002AD8))
HldChest6 = bit0(map(0x03002AD8))
Treasure_Naroom_2AD9 = bitcount(map(0x03002AD9))  // excluding HldChest7, HldChest8
HldChest7 = bit7(map(0x03002AD9))
HldChest8 = bit6(map(0x03002AD9))
NRMGLADE11B_Chest1 = bit5(map(0x03002AD9))
NRMGLADE11B_Chest2 = bit4(map(0x03002AD9))
NRMGLADE11C_Chest3 = bit3(map(0x03002AD9))
NRMGLADE11C_Chest1 = bit2(map(0x03002AD9))
NRMGLADE11C_Chest2 = bit1(map(0x03002AD9))
WVEPATHVALLEY07Chest1 = bit0(map(0x03002AD9))
WVEPATHVALLEY07Chest2 = bit7(map(0x03002ADA))
WVEPATHVALLEY07Chest3 = bit6(map(0x03002ADA))
UNDMUSHFARM03_Empty1 = bit5(map(0x03002ADA))
UNDMUSHFARM03_Empty2 = bit4(map(0x03002ADA))
UNDMUSHFARM03_Empty3 = bit3(map(0x03002ADA))
UNDMUSHFARM03_Empty4 = bit2(map(0x03002ADA))
UNDMUSHFARM03_Empty5 = bit1(map(0x03002ADA))
ARDCLOUDS03_Chest1 = bit0(map(0x03002ADA))
ARDCLOUDS06_Chest1 = bit7(map(0x03002ADB))
ARDCLOUDS06_Chest2 = bit6(map(0x03002ADB))
CLDVENTINT01_Chest1 = bit5(map(0x03002ADB))
CLDVENTINT02_Chest1 = bit4(map(0x03002ADB))
CLDVENTINT04_Chest1 = bit3(map(0x03002ADB))
CLDVENTINT03_Chest1 = bit2(map(0x03002ADB))
Eidon_Intercepted_Training_Exit = bit6(map(0x03002ADC))
Talked_To_Eidon = bit4(map(0x03002ADC))
Shrub_Insult = bit3(map(0x03002ADC))
Nrmgeyser_switch1 = bit2(map(0x03002ADC))
Nrmgeyser_switch2 = bit1(map(0x03002ADC))
Nrmgeyser_switch3 = bit0(map(0x03002ADC))
Nrmgeyser_switch4 = bit7(map(0x03002ADD))
Nrmgeyser_switch5 = bit6(map(0x03002ADD))
NaroomGeyser_Wall_Fixed = bit0(map(0x03002ADD))
Encountered_Wence = bit6(map(0x03002ADE))
Talked_To_Ulk = bit5(map(0x03002ADE))
Talked_To_Gogor = bit4(map(0x03002ADE))
Learned_Of_Gruk = bit3(map(0x03002ADE))
Bonus_Battle00 = bit1(map(0x03002ADE))
Bonus_Battle01 = bit0(map(0x03002ADE))
Bonus_Battle02 = bit7(map(0x03002ADF))
Bonus_Battle03 = bit6(map(0x03002ADF))
Orlons_door = bit4(map(0x03002ADF))
Orlons_library1 = bit3(map(0x03002ADF))
Orlons_library2 = bit2(map(0x03002ADF))
Orlons_Talked = bit1(map(0x03002ADF))
Algae1 = bit0(map(0x03002ADF))
Algae2 = bit7(map(0x03002AE0))
Algae3 = bit6(map(0x03002AE0))
Cldgeyser_Trig1 = bit5(map(0x03002AE0))
Cldgeyser_Trig2 = bit4(map(0x03002AE0))
Cldgeyser_Trig3 = bit3(map(0x03002AE0))
Cldgeyser_Trig4 = bit2(map(0x03002AE0))
Cldgeyser_Trig5 = bit1(map(0x03002AE0))
Cldgeyser_Trig6 = bit0(map(0x03002AE0))
CLDGEYSER02_Chest7 = bit7(map(0x03002AE1))
CLDGEYSER02_Chest8 = bit6(map(0x03002AE1))
CLDGEYSER02_Chest5 = bit5(map(0x03002AE1))
CLDGEYSER02_Chest6 = bit4(map(0x03002AE1))
Cldgeyser_Trig11 = bit3(map(0x03002AE1))
Cldgeyser03_Trig1 = bit2(map(0x03002AE1))
Cldgeyser03_Trig2 = bit1(map(0x03002AE1))
Cldgeyser03_Trig3 = bit0(map(0x03002AE1))
Cldgeyser03_Trig4 = bit7(map(0x03002AE2))
Cldgeyser03_Trig5 = bit6(map(0x03002AE2))
Cldgeyser04_Trig1 = bit5(map(0x03002AE2))
Cldgeyser05_Trig1 = bit4(map(0x03002AE2))
Cldgeyser_Boxxle1 = bit3(map(0x03002AE2))
Cldgeyser_Boxxle2 = bit2(map(0x03002AE2))
Cldgeyser_Boxxle3 = bit1(map(0x03002AE2))
Cldgeyser_Boxxle4 = bit0(map(0x03002AE2))
Cldgeyser_Boxxle5 = bit7(map(0x03002AE3))
Cldgeyser_Boxxle7 = bit5(map(0x03002AE3))
Cldgeyser_Boxxle8 = bit4(map(0x03002AE3))
Playscene = bit2(map(0x03002AE3))
FloorFell = bit7(map(0x03002AE4))
HLDMAZE07_Corefight = bit6(map(0x03002AE4))
HLDMAZE07_Feather = bit5(map(0x03002AE4))
Stuff = bit4(map(0x03002AE4))
Outside_key = bit3(map(0x03002AE4))
HldMaze04Trigger1 = bit2(map(0x03002AE4))
Warrada_Scene2 = bit7(map(0x03002AE5))
Warrada_Scene3 = bit6(map(0x03002AE5))
Gia_Funeral = bit4(map(0x03002AE5))
Gogor_Funeral = bit3(map(0x03002AE5))
Wence_Funeral = bit2(map(0x03002AE5))
Eidon_Funeral = bit1(map(0x03002AE5))
Party_Gia = bit0(map(0x03002AE5))
PartyPeople_2AE6 = bitcount(map(0x03002AE6))
Party_Orlon = bit7(map(0x03002AE6))
Party_Seer = bit6(map(0x03002AE6))
Party_Blu = bit5(map(0x03002AE6))
Party_Gruk = bit4(map(0x03002AE6))
Party_Ulk = bit3(map(0x03002AE6))
Party_Gogor = bit2(map(0x03002AE6))
Party_Pruitt = bit1(map(0x03002AE6))
Party_Salafy = bit0(map(0x03002AE6))
PartyPeople_2AE7 = bitcount(map(0x03002AE7))  // excluding SeerGameHint
Party_Evu = bit7(map(0x03002AE7))
Party_Poad = bit6(map(0x03002AE7))
Party_Yaki = bit5(map(0x03002AE7))
Party_Logan = bit4(map(0x03002AE7))
Party_Worveline = bit3(map(0x03002AE7))
Party_Eidon = bit2(map(0x03002AE7))
Party_Valkan = bit1(map(0x03002AE7))
SeerGameHint = bit0(map(0x03002AE7))
Evu_Conversation_2 = bit7(map(0x03002AE8))
Party_Jellybeans = bit6(map(0x03002AE8))
Worveline_Caught = bit5(map(0x03002AE8))
Party_Secret = bit4(map(0x03002AE8))
Worveline = bit3(map(0x03002AE8))
Sick_Orwin = bit2(map(0x03002AE8))
Cold_Shoulder = bit1(map(0x03002AE8))
I_Specialkey = bit0(map(0x03002AE8))
HldPrisoners_2AE9 = bitcount(map(0x03002AE9))  // excluding Wences_Arrow, Vash05_Wence_Talk, Vash13_Door_Open
Wences_Arrow = bit7(map(0x03002AE9))
Vash05_Wence_Talk = bit6(map(0x03002AE9))
Vash13_Door_Open = bit5(map(0x03002AE9))
HldPrisoner1 = bit4(map(0x03002AE9))
HldPrisoner2 = bit3(map(0x03002AE9))
HldPrisoner3 = bit2(map(0x03002AE9))
HldPrisoner4 = bit1(map(0x03002AE9))
HldPrisoner5 = bit0(map(0x03002AE9))
HldPrisoner6 = bit7(map(0x03002AEA))
HldPrisoner7 = bit6(map(0x03002AEA))
MUSHFARM03_Door = bit4(map(0x03002AEA))
Vash20_Hollow_Stool = bit3(map(0x03002AEA))
NRMLAKE01_Door = bit2(map(0x03002AEA))
Uncavern03_PoisonedWall = bit1(map(0x03002AEA))
Forcefield_Dispelled = bit3(map(0x03002AEB))
Talked_Eidon_With_Stone = bit1(map(0x03002AEB))
Warrada_Easyway = bit6(map(0x03002AEC))
WVEPATHVALLEY07Door1 = bit5(map(0x03002AEC))
WVEPATHVALLEY07Door2 = bit4(map(0x03002AEC))
GiaScene_BeatNaroom = bit3(map(0x03002AEC))
GiaScene_CaldGeyser = bit2(map(0x03002AEC))
OroIsl_TonyStranded = bit7(map(0x03002AED))
Warrada_Scene = bit6(map(0x03002AED))
Right_Thing = bit5(map(0x03002AED))
Beat_CldGeyser = bit4(map(0x03002AED))
CoreDoor_Opening = bit3(map(0x03002AED))
AvoidAgovo_Win = bit2(map(0x03002AED))
AvoidAgovo_Played = bit1(map(0x03002AED))
AvoidAgovo_Rules = bit0(map(0x03002AED))
BlastUrns_2AEE = bitcount(map(0x03002AEE))
HdnRoom03_Bombed = bit7(map(0x03002AEE))
BoxxleGlade_Bombed = bit6(map(0x03002AEE))
Undtunnel18_Bombed = bit5(map(0x03002AEE))
Undtunnel21_Bombed = bit4(map(0x03002AEE))
Undtunnel22_Bombed = bit3(map(0x03002AEE))
Cldlavavent01_Bombed01 = bit2(map(0x03002AEE))
Cldlavavent01_Bombed02 = bit1(map(0x03002AEE))
Cldlavavent04_Bombed = bit0(map(0x03002AEE))
HldPrisonerTalks_2AEF = bitcount(map(0x03002AEF))  // excluding Cldlavavent05_Bombed
Cldlavavent05_Bombed = bit7(map(0x03002AEF))
HldPrisoner1Talk = bit6(map(0x03002AEF))
HldPrisoner2Talk = bit5(map(0x03002AEF))
HldPrisoner3Talk = bit4(map(0x03002AEF))
HldPrisoner4Talk = bit3(map(0x03002AEF))
HldPrisoner5Talk = bit2(map(0x03002AEF))
HldPrisoner6Talk = bit1(map(0x03002AEF))
HldPrisoner7Talk = bit0(map(0x03002AEF))
NRMVASH01_Oldman_Told = bit6(map(0x03002AF0))
Orlons_Buddy = bit4(map(0x03002AF0))
Soap_Gag = bit3(map(0x03002AF0))
Poop_Gag = bit2(map(0x03002AF0))
Wence_On_His_Way = bit1(map(0x03002AF0))
Girl_Stormed_Off2 = bit0(map(0x03002AF0))
Geyser_State_Green = bit7(map(0x03002AF1))
Geyser_State_Orange = bit6(map(0x03002AF1))
Geyser_State_Blue = bit5(map(0x03002AF1))
Geyser_State_Red = bit4(map(0x03002AF1))
TriggerCutscene_WenceHouse = bit3(map(0x03002AF1))
TriggerCutscene_Morag_Kidnaps = bit1(map(0x03002AF1))
Trigger1 = bit0(map(0x03002AF1))
Trigger2 = bit7(map(0x03002AF2))
Trigger3 = bit6(map(0x03002AF2))
Trigger4 = bit5(map(0x03002AF2))
CellSwitch1 = bit4(map(0x03002AF2))
CellSwitch2 = bit3(map(0x03002AF2))
CellDoor1 = bit2(map(0x03002AF2))
DOOR_1 = bit1(map(0x03002AF2))
DOOR_2 = bit0(map(0x03002AF2))
DOOR_3 = bit7(map(0x03002AF3))
DOOR_4 = bit6(map(0x03002AF3))
DOOR_5 = bit5(map(0x03002AF3))
DOOR_6 = bit4(map(0x03002AF3))
DOOR_7 = bit3(map(0x03002AF3))
Switch1 = bit2(map(0x03002AF3))
Switch2 = bit1(map(0x03002AF3))
Switch3 = bit0(map(0x03002AF3))
Switch4 = bit7(map(0x03002AF4))
Switch5 = bit6(map(0x03002AF4))
Switch6 = bit5(map(0x03002AF4))
Switch7 = bit4(map(0x03002AF4))
Switch8 = bit3(map(0x03002AF4))
Switch9 = bit2(map(0x03002AF4))
Switch10 = bit1(map(0x03002AF4))
Switch11 = bit0(map(0x03002AF4))
Switch12 = bit7(map(0x03002AF5))
NRMVASH20_Chest1 = bit6(map(0x03002AF5))
MENU_Disable = bit5(map(0x03002AF5))
TriggerCutscene_LeavingVault = bit4(map(0x03002AF5))
Vault_Chest = bit3(map(0x03002AF5))
TriggerCutscene_Abandoned_Tower = bit2(map(0x03002AF5))
Shadowhold_StartCell_Door = bit1(map(0x03002AF5))
TriggerCutscene_Shadowhold_ArderialSaviour = bit0(map(0x03002AF5))
TriggerCutscene_LeavingMar = bit7(map(0x03002AF6))
ORORUINS02_Chest2 = bit6(map(0x03002AF6))
HLDMAZE04Chest1 = bit5(map(0x03002AF6))
TriggerCutscene_BluShowsGeyser = bit4(map(0x03002AF6))
HLDMAZE13Chest1 = bit3(map(0x03002AF6))
HldChest3 = bit2(map(0x03002AF6))
HLDMAZE22Chest1 = bit1(map(0x03002AF6))
FerryRelatedUnknown = bit0(map(0x03002AF6))
Cutscene_Oflardt_Weave = bit7(map(0x03002AF7))
TriggerCutscene_Vash_Party1 = bit6(map(0x03002AF7))
TriggerCutscene_Vash_Party2 = bit5(map(0x03002AF7))
TriggerCutscene_Vash_Party3 = bit4(map(0x03002AF7))
TriggerCutscene_Ashyn_Geyser = bit3(map(0x03002AF7))
OROGEYSER01_Trig1 = bit1(map(0x03002AF7))
OROGEYSER01_Trig2 = bit0(map(0x03002AF7))
OROGEYSER01_Trig3 = bit7(map(0x03002AF8))
OROGEYSER09_Trig1 = bit6(map(0x03002AF8))
Unknown1 = bit5(map(0x03002AF8))
Cald_Battle_Phase1 = bit3(map(0x03002AF8))
TriggerCutscene_WenceThanksAgovo = bit2(map(0x03002AF8))
ShadowholdMarinaUnknown = bit1(map(0x03002AF8))
Cald_Battle_Phase2_MiddleWest = bit0(map(0x03002AF8))
Cald_Battle_Phase2_West = bit7(map(0x03002AF9))
Cald_Battle_Phase2_MiddleEast = bit6(map(0x03002AF9))
Cald_Battle_Phase2_East = bit5(map(0x03002AF9))
Battle_Talk = bit4(map(0x03002AF9))
HLDMAZE08Chest3 = bit3(map(0x03002AF9))
Cald_Battle_PreventExit = bit2(map(0x03002AF9))
Cald_Battle_Unknown = bit1(map(0x03002AF9))
NRMVASH12_Chest2 = bit7(map(0x03002AFA))
TriggerCutscene_ArderialEscort = bit6(map(0x03002AFA))
Visited_Palace = bit5(map(0x03002AFA))
Cald_Party_Fall_Into_Inn_Cutscene = bit4(map(0x03002AFA))
OrwinCutsceneHide = bit3(map(0x03002AFA))
Battle_No_Booty = bit2(map(0x03002AFA))
Battle_Run_Disable = bit1(map(0x03002AFA))
SaveGame_Slot1_Unknown1 = bit0(map(0x03002AFA))
SaveGame_Slot2_Unknown1 = bit7(map(0x03002AFB))
ARDGEYSER01_Door1 = bit6(map(0x03002AFB))
SaveGame_Unknown2 = bit5(map(0x03002AFB))
ARDGEYSER02_Door10 = bit4(map(0x03002AFB))
ARDGEYSER02_Door3 = bit3(map(0x03002AFB))
ARDGEYSER02_Door2 = bit2(map(0x03002AFB))
ARDGEYSER02_Door4 = bit1(map(0x03002AFB))
ARDGEYSER02_Door9 = bit0(map(0x03002AFB))
ARDGEYSER02_Door5 = bit7(map(0x03002AFC))
ARDGEYSER02_Door1 = bit6(map(0x03002AFC))
ARDGEYSER02_Door6 = bit5(map(0x03002AFC))
ARDGEYSER02_Door7 = bit4(map(0x03002AFC))
ARDGEYSER02_Door8 = bit3(map(0x03002AFC))
Ardgeyser_Boxxle1 = bit2(map(0x03002AFC))
Ardgeyser_Trig8 = bit1(map(0x03002AFC))
Ardgeyser_Trig9 = bit0(map(0x03002AFC))
Ardgeyser_Trig13 = bit7(map(0x03002AFD))
Ardgeyser_Trig14 = bit6(map(0x03002AFD))
Ardgeyser_Trig12 = bit5(map(0x03002AFD))
Ardgeyser_Trig11 = bit4(map(0x03002AFD))
Ardgeyser_Trig1 = bit3(map(0x03002AFD))
ARDGEYSER13_Door1 = bit2(map(0x03002AFD))
ARDGEYSER13_Door2 = bit1(map(0x03002AFD))
Rock_Shuffling = bit0(map(0x03002AFD))
Cald_Battle_Phase3 = bit7(map(0x03002AFE))
ARDGEYSER14_Door1 = bit6(map(0x03002AFE))
TriggerCutscene_Cald_Party_Play = bit5(map(0x03002AFE))
Cald_Party_LavaArboll = bit4(map(0x03002AFE))
Dug_Deep_Cell = bit3(map(0x03002AFE))
Credits = bit2(map(0x03002AFE))
ARDGEYSER19_Door1 = bit1(map(0x03002AFE))
ARDGEYSER19_Door2 = bit0(map(0x03002AFE))
ARDGEYSER19_Door3 = bit7(map(0x03002AFF))
Ardgeyser_Trig2 = bit6(map(0x03002AFF))
Ardgeyser_Trig4 = bit5(map(0x03002AFF))
Ardgeyser_Trig3 = bit4(map(0x03002AFF))
ARDGEYSER25_Door1 = bit3(map(0x03002AFF))
Ardgeyser_Trig5 = bit2(map(0x03002AFF))
Ardgeyser_Trig6 = bit1(map(0x03002AFF))
Ardgeyser_Trig7 = bit0(map(0x03002AFF))
Ardgeyser_Trig10 = bit7(map(0x03002B00))
Korg_Defated = bit6(map(0x03002B00))
Agram_Vanished = bit3(map(0x03002B00))
Vash13_Door_West = bit2(map(0x03002B00))
Vash13_Door_South = bit1(map(0x03002B00))
Funeral_CanProgress = bit7(map(0x03002B01))
Vash13_Door_CloseOnLoad = bit6(map(0x03002B01))
OrotheanBelt = bit5(map(0x03002B01))
OrotheOverworld_Unknown = bit4(map(0x03002B01))
AbandonedTower_Unknown = bit3(map(0x03002B01))
Ashgars_KeySearchMode = bit2(map(0x03002B01))
Cald_Battle_Indoors = bit1(map(0x03002B01))
Wence_Shooting = bit0(map(0x03002B01))
Overworld_Ferry = bit7(map(0x03002B02))
Palette_Unknown = bit6(map(0x03002B02))
Riding_Parathin = bit5(map(0x03002B02))
HldCell01_Feather_Taken = bit4(map(0x03002B02))
TriggerCutscene_GiaScene_CaldGeyser = bit3(map(0x03002B02))
DualSummon = bit2(map(0x03002B02))
Vash13_Door_East = bit1(map(0x03002B02))
Vash13_Door_North = bit0(map(0x03002B02))
Vash13_PuzzleFailed = bit7(map(0x03002B03))
Vash13_PuzzleEnabled = bit6(map(0x03002B03))
HDNLAVATUBE03_Trig1 = bit5(map(0x03002B03))
HDNROOM04_Chest2 = bit4(map(0x03002B03))
HDNUNDTUN04_Chest2 = bit3(map(0x03002B03))
HDNUNDTUN04_Chest1 = bit2(map(0x03002B03))
FORT03_Chest1 = bit1(map(0x03002B03))
Newgame_Plus = bit0(map(0x03002B03))
WVEPATHVALLEY04_Chest1 = bit7(map(0x03002B04))
// End of autogenerated var_to_rascript.py

// Script_SaveVars
Intro_Progress = byte(map(0x03002B05))
Nrm_Intro_Count = byte(map(0x03002B06))
Gias_Taunt = byte(map(0x03002B07))
Blades_State = byte(map(0x03002B08))
Kidnapping = byte(map(0x03002B09))
Cald_Cowardice = byte(map(0x03002B0A))
Cald_Battle_Phase = byte(map(0x03002B0B))
Blu_State = byte(map(0x03002B0C))
Oro_Plot_Byte = byte(map(0x03002B0D))
GiaEidon_State = byte(map(0x03002B0E))
Final_Byte = byte(map(0x03002B10))
SeerGame_MagiID = byte(map(0x03002B11))
Worveline_Hiding = byte(map(0x03002B12))
TCState = byte(map(0x03002B13))
Cald_Btl_Count = byte(map(0x03002B15))
Ferry_Price = byte(map(0x03002B16))
Ferry_Location = byte(map(0x03002B17))
Ferry_Destination = byte(map(0x03002B18))
Ferry_State = byte(map(0x03002B19))
Seer_Byte = byte(map(0x03002B1A))
First_Creature = byte(map(0x03002B1B))
Brub_Byte = byte(map(0x03002B1C))
Overworld_Load = byte(map(0x03002B1D))
Exit_Disable = byte(map(0x03002B1E))
Ormagon_Quest = byte(map(0x03002B1F))
Mushrooms_Eaten = byte(map(0x03002B24))
Hunter_Hyren = byte(map(0x03002B25))
Which_Historian_Menu = byte(map(0x03002B26))
UndGeyserWall = byte(map(0x03002B28))
HeroAbilities = byte(map(0x03002B29))
Glyph_Count = byte(map(0x03002B2A))
Underneath_Geyser_Scene = byte(map(0x03002B2B))
Falling_Byte = byte(map(0x03002B2C))
Falling_Byte2 = byte(map(0x03002B2D))
Falling_Byte3 = byte(map(0x03002B2E))
Salafy_TutorialMoronLoop = byte(map(0x03002B2F))
Battle_Exit_Code = byte(map(0x03002B31))
ArggeyserReset0 = byte(map(0x03002B32))
ArggeyserReset1 = byte(map(0x03002B33))
Save_Slot = byte(map(0x03002B34))
Script_Battle_Turn_Count = byte(map(0x03002B35))
Bogrom_Load_State = byte(map(0x03002B36))
Vash13_Times_Around = byte(map(0x03002B38))
Valkan_Looking_For_You = byte(map(0x03002B39))

GameCount = word(0x2B3A)

// Battle_Exit_Code Enum
BattleExit_None = 0x00
BattleExit_Run = 0xFD
BattleExit_Win = 0xFE
BattleExit_Lose = 0xFF

// GameCount Enum
GC_OPENING = 0x01
GC_NRM_INTRO = 0x02
GC_FIND_ORWIN = 0x03
GC_QUEST_FOR_GIA = 0x04
GC_NAROOM_GEYSER = 0x05
GC_GLOVES = 0x06
GC_UND_INTRO = 0x07
GC_UND_QUAKE = 0x08
GC_UND_GEYSER = 0x09
GC_UND_WASTED = 0x0A
GC_CALD_INTRO = 0x0B
GC_ARBOLL_HUNT = 0x0C
GC_LAVA_BRIDGE = 0x0D
GC_BOOTS_QUEST = 0x0E
GC_CALD_GEYSER = 0x0F
GC_TONY_KIDNAPPED = 0x10
GC_SHADOWHOLD_JAIL = 0x11
GC_BACK_IN_OROTHE = 0x12
GC_OROTHE_GEYSER = 0x13
GC_BEAT_OROTHE = 0x14
GC_FALSE_END = 0x15
GC_ARDERIAL = 0x16
GC_ARDERIAL_GEYSER = 0x17
GC_AGRAM_BATTLE = 0x18
GC_END_FUNERAL = 0x19
GC_END_PARTY = 0x1A
GC_END_BAD = 0x1B
GC_END_NORMAL = 0x1C

////////////////////////////
// Script Var Collections //
////////////////////////////

// Autogenerated by var_to_rascript.py
Treasure_Naroom_Length = 40
Treasure_Naroom = [
    Treasure_Naroom_2AB4 - bit7(map(0x03002AB4)) - bit6(map(0x03002AB4)) - bit2(map(0x03002AB4)),
    Treasure_Naroom_2AB5 - bit4(map(0x03002AB5)),
    NRMGLADE04_Chest1,
    NRMLAKE02_Chest1,
    NRMFOREST04_Chest1,
    WVEPATHVALLEY05_Chest1,
    WVEPATHVALLEY02_Chest1,
    NRMGLADE05_Chest1,
    WVEGIASHUT02_Chest1,
    NRMVASH12_Chest1,
    NRMVASH22_Chest1,
    WVEPATHVALLEY02_Chest2,
    NRMVASH10_Chest1,
    NRMLAKE01_Chest1,
    NRMLAKE01_Chest2,
    NRMFOREST07_Chest1,
    OVRSURFACE01B_Chest1,
    NRMLAKE04_Chest1,
    Treasure_Naroom_2AD9 - HldChest7 - HldChest8,
    WVEPATHVALLEY07Chest2,
    WVEPATHVALLEY07Chest3,
    NRMVASH20_Chest1,
    NRMVASH12_Chest2,
    WVEPATHVALLEY04_Chest1,
    Blades_State/Blades_State
]
Treasure_Orothe_Length = 28
Treasure_Orothe = [
    Treasure_Orothe_2AB6 - NRMGLADE04_Chest1 - NRMLAKE02_Chest1 - NRMFOREST04_Chest1,
    Treasure_Orothe_2ABD - CLDLAVAVENT02_CHEST1 - CLDLAVAVENT03_CHEST1,
    Treasure_Orothe_2ABE - bit6(map(0x03002ABE)),
    ORORUINS03_Chest5,
    OROTUNNEL10_Chest2,
    OROCORAL05_Chest1,
    OROCORAL05_Chest2,
    OROCORAL05_Chest3,
    OROCORAL02_Chest1,
    OROCORAL02_Chest2,
    OROCORAL02_Chest3,
    Vault_Chest,
    ORORUINS02_Chest2
]
Treasure_NaroomGeyser_Length = 5
Treasure_NaroomGeyser = [
    Treasure_NaroomGeyser_2AB7 - WVEPATHVALLEY05_Chest1 - WVEPATHVALLEY02_Chest1 - NRMGLADE05_Chest1
]
Treasure_Underneath_Length = 20
Treasure_Underneath = [
    Treasure_Underneath_2AB8 - bit7(map(0x03002AB8)) - WVEGIASHUT02_Chest1,
    UNDCAVERN02_Chest1,
    UNDCAVERN02_Chest2,
    UNDCAVERN03_Chest1,
    UNDMUSHFARM03_Chest1,
    HDNROOM04_Chest1,
    HDNROOM04_Chest3,
    HDNUNDTUN02_Chest1,
    HDNUNDTUN01_Chest1,
    HDNUNDTUN01_Chest2,
    FORT02_Chest1,
    HDNROOM04_Chest2,
    HDNUNDTUN04_Chest2,
    HDNUNDTUN04_Chest1,
    FORT03_Chest1
]
Treasure_UnderneathGeyser_Length = 16
Treasure_UnderneathGeyser = [
    UNDGEYSER01_Chest1,
    UNDGEYSER02_Chest1,
    UNDGEYSER02_Chest2,
    Treasure_UnderneathGeyser_2ABA - bit0(map(0x03002ABA)),
    UNDGEYSER08_Chest5,
    UNDGEYSER07_Chest1,
    UNDGEYSER06_Chest1,
    UNDGEYSER06_Chest2,
    UNDGEYSER05_Chest1,
    UNDGEYSER03_Chest1
]
Treasure_Cald_Length = 27
Treasure_Cald = [
    Treasure_Cald_2ABB - UNDGEYSER08_Chest5 - bit6(map(0x03002ABB)),
    CLDLAVATUBE09_CHEST2,
    CLDLAVATUBE09_CHEST3,
    CLDLAVATUBE10_CHEST1,
    CLDLAVATUBE10_CHEST2,
    CLDLAVAVENT02_CHEST1,
    CLDLAVAVENT03_CHEST1,
    CLDLAVAVENT03_CHEST2,
    CLDLAVAVENT04_CHEST1,
    CLDLAVAVENT08_Chest1,
    CLDLAVATUBE10_CHEST_GBA,
    HDNLAVATUBE03_Chest1,
    HDNLAVATUBE03_Chest2,
    HDNLAVATUBE03_Chest3,
    HDNLAVATUBE03_Chest4,
    HDNLAVATUBE03_Chest5,
    HDNLAVATUBE03_Chest6,
    HDNLAVATUBE03_Chest7,
    CLDVENTINT01_Chest1,
    CLDVENTINT02_Chest1,
    CLDVENTINT04_Chest1,
    CLDVENTINT03_Chest1
]
Treasure_Shadowhold_Length = 23
Treasure_Shadowhold = [
    HLDCELL04Chest1,
    HLDMAZE06Chest1,
    HLDMAZE08Chest1,
    HLDMAZE08Chest2,
    Treasure_Shadowhold_2AC1 - bit7(map(0x03002AC1)) - bit3(map(0x03002AC1)) - bit1(map(0x03002AC1)),
    HLDMAZE21Chest1,
    HLDMAZE04Chest2,
    Treasure_Shadowhold_2AD8 - bit7(map(0x03002AD8)) - OROCORAL05_Empty - HLDMAZE23_Chest1,
    HldChest7,
    HldChest8,
    HLDMAZE04Chest1,
    HLDMAZE13Chest1,
    HldChest3,
    HLDMAZE22Chest1,
    HLDMAZE08Chest3
]
Treasure_CaldGeyser_Length = 18
Treasure_CaldGeyser = [
    Treasure_CaldGeyser_2AC3,
    CLDGEYSER02_Chest14,
    CLDGEYSER03_Chest12,
    CLDGEYSER03_Chest4,
    CLDGEYSER03_Chest1,
    CLDGEYSER03_Chest9,
    CLDGEYSER03_Chest8,
    CLDGEYSER02_Chest7,
    CLDGEYSER02_Chest8,
    CLDGEYSER02_Chest5,
    CLDGEYSER02_Chest6
]
Treasure_OrotheGeyser_Length = 13
Treasure_OrotheGeyser = [
    Treasure_OrotheGeyser_2AC6 - bit7(map(0x03002AC6)) - bit6(map(0x03002AC6)),
    Treasure_OrotheGeyser_2AC7 - bit4(map(0x03002AC7)) - bit3(map(0x03002AC7)) - bit1(map(0x03002AC7)),
    OROGEYSER01_Chest1,
    OROGEYSER01_Chest2
]
Treasure_ArderialGeyser_Length = 45
Treasure_ArderialGeyser = [
    Treasure_ArderialGeyser_2AC8,
    Treasure_ArderialGeyser_2AC9 - UNDGEYSER07_Chest1 - UNDGEYSER06_Chest1 - UNDGEYSER06_Chest2,
    ARDGEYSER18_Chest2,
    Treasure_ArderialGeyser_2ACB,
    Treasure_ArderialGeyser_2ACC - bit2(map(0x03002ACC)) - bit1(map(0x03002ACC)) - bit0(map(0x03002ACC)),
    Treasure_ArderialGeyser_2ACD - bit7(map(0x03002ACD)) - OROGEYSER01_Chest1 - OROGEYSER01_Chest2,
    Treasure_ArderialGeyser_2ACE - bit7(map(0x03002ACE)) - bit2(map(0x03002ACE)),
    Treasure_ArderialGeyser_2ACF - bit2(map(0x03002ACF))
]
Treasure_Arderial_Length = 4
Treasure_Arderial = [
    ARDGARDEN01_Chest1,
    ARDCLOUDS03_Chest1,
    ARDCLOUDS06_Chest1,
    ARDCLOUDS06_Chest2
]
Treasure_Useless_Length = 3
Treasure_Useless = [
    HLDMAZE07_Feather,
    Wences_Arrow,
    HldCell01_Feather_Taken
]
PartyPeople_Length = 15
PartyPeople = [
    PartyPeople_2AE6,
    PartyPeople_2AE7 - SeerGameHint
]
HldPrisoners_Length = 7
HldPrisoners = [
    HldPrisoners_2AE9 - Wences_Arrow - Vash05_Wence_Talk - Vash13_Door_Open,
    HldPrisoner6,
    HldPrisoner7
]
BlastUrns_Length = 9
BlastUrns = [
    BlastUrns_2AEE,
    Cldlavavent05_Bombed
]
HldPrisonerTalks_Length = 7
HldPrisonerTalks = [
    HldPrisonerTalks_2AEF - Cldlavavent05_Bombed
]
// End of autogenerated var_to_rascript.py

///////////////
// Creatures //
///////////////
InventoryStruct_CreatureDan = map(0x203C374)
InventoryStruct_Creatures = map(0x203C39C)
InventoryStruct_Creature_Size = 0x28
InventoryStruct_Creature_Last = 0x93 // 0x00 to 0x93

InventoryStruct_RingCount = byte(map(0x203DABC))
InventoryStruct_EquippedRings = map(0x203DABE)
function equipped_ring(nth_ring) =>
    byte(InventoryStruct_EquippedRings + nth_ring)
EquippedRing_None = 0xFF

InventoryStruct_Animite = map(0x203DB32)

BattleCreaturesStruct_CreatureDan = map(0x20278F8)
BattleCreaturesStruct_CreatureSize = 0x140
BattleCreature_Dan = 0x00
BattleCreature_Ally1 = 0x01
BattleCreature_Ally2 = 0x02
BattleCreature_Ally3 = 0x03
BattleCreature_Ally4 = 0x04
BattleCreature_Enemy1 = 0x05
BattleCreature_Enemy2 = 0x06
BattleCreature_Enemy3 = 0x07
BattleCreature_Enemy4 = 0x08
BattleCreature_Magi = 0x09

function get_creature(battle, i, offset) {
    // Get the target address
    if(battle == 1)
        address = BattleCreaturesStruct_CreatureDan + i*BattleCreaturesStruct_CreatureSize + offset
    else
        address = InventoryStruct_Creatures + i*InventoryStruct_Creature_Size + offset
    // return a byte or word
    if(
        offset == Creature_Offset_Experience ||
        offset == Creature_Offset_CurEnergy ||
        offset == Creature_Offset_MaxEnergy ||
        offset == Creature_Offset_Ability1 ||
        offset == Creature_Offset_Ability2 ||
        offset == Creature_Offset_Ability3 ||
        offset == Creature_Offset_Ability4
    )
        return word(address)
    return byte(address)
}

function any_of_creature(func) =>
    any_of(range(0, InventoryStruct_Creature_Last), func)

Creature_Offset_ID = 0x00
Creature_Offset_Size = 0x01
Creature_Offset_Level = 0x02
Creature_Offset_Experience = 0x04
Creature_Offset_CurEnergy = 0x06
Creature_Offset_MaxEnergy = 0x08
Creature_Offset_Strength = 0x0A
Creature_Offset_Skill = 0x0B
Creature_Offset_Speed = 0x0C
Creature_Offset_Defence = 0x0D
Creature_Offset_Resist = 0x0E
Creature_Offset_Luck = 0x0F
Creature_Offset_EnergyUp = 0x10
Creature_Offset_ElementResist = 0x11
Creature_Offset_ElementWeak = 0x12
Creature_Offset_StatusImmune = 0x13
Creature_Offset_StatusActive = 0x14
Creature_Offset_StatusPerm = 0x15
Creature_Offset_AI = 0x16
Creature_Offset_Ability1 = 0x18
Creature_Offset_Ability2 = 0x1A
Creature_Offset_Ability3 = 0x1C
Creature_Offset_Ability4 = 0x1E
Creature_Offset_UnlockLevelAbility1 = 0x20
Creature_Offset_UnlockLevelAbility2 = 0x21
Creature_Offset_UnlockLevelAbility3 = 0x22
Creature_Offset_UnlockLevelAbility4 = 0x23
Creature_Offset_Relic1 = 0x24
Creature_Offset_Relic2 = 0x25

// Creature_Offset_UnlockLevelAbility1 magic numbers
Creature_Ability_DoesNotExist = 0xC8
Creature_Ability_Unlocked = 0xFF

// Creature ID Enum
Creature_Abaquist = 0x00
Creature_Agovo = 0x01
Creature_Alaban = 0x02
Creature_Arbolit = 0x03
Creature_Arboll = 0x04
Creature_Ayebaw = 0x05
Creature_Balamant = 0x06
Creature_Bhatar = 0x07
Creature_Bisiwog = 0x08
Creature_BlackAgovo = 0x09
Creature_Borgor = 0x0A
Creature_Brub = 0x0B
Creature_Bwill = 0x0C
Creature_CaveHyren = 0x0D
Creature_CaveRudwot = 0x0E
Creature_ChaosJile = 0x0F
Creature_ChaosPlith = 0x10
Creature_CoralHyren = 0x11
Creature_CoreHyren = 0x12
Creature_DarkAyebaw = 0x13
Creature_DarkbreedHyren = 0x14
Creature_DarkFurok = 0x15
Creature_DarkVellup = 0x16
Creature_DeepHyren = 0x17
Creature_Diobor = 0x18
Creature_Drakan = 0x19
Creature_Drush = 0x1A
Creature_DryteFiend = 0x1B
Creature_Eebit = 0x1C
Creature_Epik = 0x1D
Creature_Ergar = 0x1E
Creature_FlameHyren = 0x1F
Creature_Furok = 0x20
Creature_GhostBwisp = 0x21
Creature_GiantKorit = 0x22
Creature_Gorath = 0x23
Creature_Grax = 0x24
Creature_Grubble = 0x25
Creature_GumGum = 0x26
Creature_Harban = 0x27
Creature_HunterJile = 0x28
Creature_Jore = 0x29
Creature_Karak = 0x2A
Creature_Kelthet = 0x2B
Creature_Koil = 0x2C
Creature_LavaAq = 0x2D
Creature_LavaArboll = 0x2E
Creature_LavaBalamant = 0x2F
Creature_LeafHyren = 0x30
Creature_LightningHyren = 0x31
Creature_MagmaHyren = 0x32
Creature_MagmaJile = 0x33
Creature_Megathan = 0x34
Creature_MushroomHyren = 0x35
Creature_OrathanFlyer = 0x36
Creature_Orish = 0x37
Creature_Ormagon = 0x38
Creature_Orpus = 0x39
Creature_Paralit = 0x3A
Creature_Parmalag = 0x3B
Creature_Platheus = 0x3C
Creature_Plith = 0x3D
Creature_Pyloluf = 0x3E
Creature_Quor = 0x3F
Creature_Rabbage = 0x40
Creature_Raxis = 0x41
Creature_Rudwot = 0x42
Creature_ShadowKarak = 0x43
Creature_ShadowVinoc = 0x44
Creature_Shryque = 0x45
Creature_Sphor = 0x46
Creature_Szalak = 0x47
Creature_ThunderHyren = 0x48
Creature_ThunderVashp = 0x49
Creature_TimberHyren = 0x4A
Creature_Tragan = 0x4B
Creature_TreeHinko = 0x4C
Creature_Twee = 0x4D
Creature_Vellup = 0x4E
Creature_Vinoc = 0x4F
Creature_Vulbor = 0x50
Creature_Wasperine = 0x51
Creature_Weebat = 0x52
Creature_Weebo = 0x53
Creature_Weethan = 0x54
Creature_Xyx = 0x55
Creature_Placeholder1 = 0x56
Creature_Placeholder2 = 0x57
Creature_Dan = 0x58
Creature_Togoth = 0x59
Creature_Ogar = 0x5A
Creature_Korremar = 0x5B
Creature_Warrada = 0x5C
Creature_Korg = 0x5D
Creature_Zet = 0x5E
Creature_Morag = 0x5F
Creature_Agram = 0x60
Creature_Agram2 = 0x61
Creature_Agram3 = 0x62
Creature_ShadowMagi1 = 0x63
Creature_ShadowMagi2 = 0x64
Creature_ShadowMagi3 = 0x65
Creature_ShadowMagi4 = 0x66
Creature_ShadowMagi5 = 0x67
Creature_ShadowMagi6 = 0x68
Creature_ShadowMagi7 = 0x69
Creature_ShadowMagi8 = 0x6A
Creature_Salafy = 0x6B
Creature_Null = 0x6E

////////////
// Relics //
////////////
InventoryStruct_Relics = map(0x0203DAC8)

// Relic ID Enum
Relic_Null = 0x00
Relic_ArchaicLeaf = 0x01
Relic_ArmorOrb = 0x02
Relic_BagOfBones = 0x03
Relic_BarkThimble = 0x04
Relic_ChanneledGem = 0x05
Relic_CorfPearl = 0x06
Relic_CrimsonVoid = 0x07
Relic_EarthsAura = 0x08
Relic_EndBringer = 0x09
Relic_EnergyGem = 0x0A
Relic_FlameAura = 0x0B
Relic_FlameEssence = 0x0C
Relic_GemOfNaroom = 0x0D
Relic_GoldenClover = 0x0E
Relic_GrailOfLife = 0x0F
Relic_HyrensClaw = 0x10
Relic_LeafEssence = 0x11
Relic_LucentBelt = 0x12
Relic_Maelstorm = 0x13
Relic_OmborsAmulet = 0x14
Relic_PhantomWind = 0x15
Relic_PinchOfLife = 0x16
Relic_RabbageFoot = 0x17
Relic_RageStone = 0x18
Relic_ShadowVeil = 0x19
Relic_ShieldOrb = 0x1A
Relic_SkyEssence = 0x1B
Relic_SpiceOfLife = 0x1C
Relic_StoneEssence = 0x1D
Relic_StoneOfDoom = 0x1E
Relic_StoneOfWind = 0x1F
Relic_SwordOfWind = 0x20
Relic_TideEssence = 0x21
Relic_TitanRing = 0x22
Relic_WaterOrb = 0x23
Relic_WishBone = 0x24

function relic(id) =>
    byte(InventoryStruct_Relics + id)

///////////
// Items //
///////////

InventoryStruct_Items = map(0x203DAEE)

// Item ID Enum
Item_Null = 0x00
Item_BalooLeaf = 0x01
Item_BalooSap = 0x02
Item_BalooRoot = 0x03
Item_ThreeHeadedCoin = 0x04
Item_BalanceScale = 0x05
Item_BucketOPink = 0x06
Item_PlodSpnew = 0x07
Item_HasteGem = 0x08
Item_GuardGem = 0x09
Item_PowerGem = 0x0A
Item_StrengthGem = 0x0B
Item_DeflectGem = 0x0C
Item_RemedyDrink = 0x0D
Item_CrescentGem = 0x0E
Item_GibbousGem = 0x0F
Item_RuneOfMight = 0x10
Item_RuneOfHope = 0x11
Item_RuneOfPower = 0x12
Item_RuneOfWill = 0x13
Item_RuneOfFury = 0x14
Item_MasterRune = 0x15
Item_KarmicMight = 0x16
Item_KarmicHope = 0x17
Item_KarmicPower = 0x18
Item_KarmicWill = 0x19
Item_KarmicFury = 0x1A
Item_CloudFrond = 0x1B
Item_ShadowKey = 0x1C
Item_AshgarsKey = 0x1D
Item_BlusHorn = 0x1E
Item_WencesArrow = 0x1F
Item_Feather = 0x20
Item_StarKey = 0x21
Item_BlurryScroll = 0x22
Item_WaterOfLife = 0x23
Item_Screwdriver = 0x24
Item_SpecimenJar = 0x25
Item_JarOfFungus = 0x26
Item_Algae = 0x27
Item_Fungicide = 0x28
Item_HollowStool = 0x29
Item_BlastUrn = 0x2A
Item_Ticket = 0x2B
Item_BirdSeed = 0x2C
Item_EldritchAwl = 0x2D
Item_OrnateAwl = 0x2E
Item_Jellybeans = 0x2F

function item(id) =>
    byte(InventoryStruct_Items + id)

////////////
// Spells //
////////////
InventoryStruct_Spells = map(0x203DB1E)

// Spell ID Enum
Spell_Null = 0x00
Spell_LeafCut = 0x01
Spell_Grow = 0x02
Spell_Burrow = 0x03
Spell_CaveIn = 0x04
Spell_Thunderquake = 0x05
Spell_Fireball = 0x06
Spell_FlameGeyser = 0x07
Spell_Entangle = 0x08
Spell_TidalWave = 0x09
Spell_DispelX = 0x0A
Spell_Updraft = 0x0B
Spell_Lightning = 0x0C
Spell_Condemn = 0x0D
Spell_Singularity = 0x0E
Spell_Judge = 0x0F
Spell_Jury = 0x10
Spell_Executioner = 0x11
Spell_Flood = 0x12
Spell_CunningBlow = 0x13

function spell(id) =>
    byte(InventoryStruct_Spells + id)

///////////////
// Misc Vars //
///////////////
BaseStruct_IsInBattle = byte(map(0x3000054))
function in_battle() =>
    BaseStruct_IsInBattle == 1
BaseStruct_GraphicsSubStruct_TextboxIsBusy = byte(map(0x03001440))
function in_textbox() =>
    BaseStruct_GraphicsSubStruct_TextboxIsBusy == 1
Ticker_byte = byte(map(0x30016C0)) // Actually a dword, but we can use it to iterate over 256 frames
Ticker = dword(map(0x30016C0))
DanStruct_DanX = dword(map(0x3002F78))
DanStruct_DanY = dword(map(0x3002F7C))
DanStruct_DanDirection = dword(map(0x3002FAC))



////////////
// Scenes //
////////////


// Autogenerated by scene_to_rascript.py
// Set: Naroom
Scene_Naroom_Forest_Deep_Intersection = 1
Scene_Naroom_Forest_Deep_Pathway = 2
Scene_Naroom_Forest_Deep_Connection = 3
Scene_Naroom_Forest_Deep_Heart = 4
Scene_Naroom_Forest_Deep_Cache = 5
Scene_Naroom_Forest_Deep_House = 6
Scene_Naroom_Forest_Deep_WenceRoom = 7
Scene_Naroom_Geyser_Southeast = 8
Scene_Naroom_Geyser_South = 9
Scene_Naroom_Geyser_Southwest = 10
Scene_Naroom_Geyser_West = 11
Scene_Naroom_Geyser_Center = 12
Scene_Naroom_Geyser_East = 13
Scene_Naroom_Geyser_Northeast = 14
Scene_Naroom_Geyser_North = 15
Scene_Naroom_Geyser_Northwest = 16
Scene_Naroom_Geyser_Doorway = 17
Scene_Naroom_Geyser_CoreStone = 18
Scene_Naroom_Geyser_Entrance = 19
Scene_Naroom_Grove_Pathway = 20
Scene_Naroom_Grove_Entrance = 21
Scene_Naroom_Vash_Entrance = 22
Scene_Naroom_Glade_GuardEntrance = 23
Scene_Naroom_Glade_RingRoad = 24
Scene_Naroom_Glade_Intersection = 25
Scene_Naroom_Glade_Field = 26
Scene_Naroom_Glade_Pathway = 27
Scene_Naroom_Glade_Geyser = 28
Scene_Naroom_Glade_Cave_Exterior = 29
Scene_Naroom_Forest_Puzzle = 30
Scene_Underneath_Tunnels_Hyren_Forest = 31
Scene_Naroom_Seers_House = 32
Scene_Naroom_Seers_Room = 33
Scene_Naroom_Seers_Pathway = 34
Scene_Naroom_Seers_Hyren_UnderwaterEntrance = 35
Scene_Naroom_Seers_Hyren_UnderwaterExit = 36
Scene_Naroom_Seers_Hyren_SeaCave = 37
Scene_Naroom_Grove_River = 38
Scene_Naroom_Grove_Cache = 39
Scene_Misc_Debug = 40
Scene_Naroom_Forest_Exit = 41
Scene_Naroom_Forest_Exit_UNUSED1 = 42
Scene_Naroom_Forest_Exit_UNUSED2 = 43
Scene_Naroom_Vash_BottomStairs = 44
Scene_Naroom_Vash_South = 45
Scene_Naroom_Vash_Southwest = 46
Scene_Naroom_Vash_Southeast = 47
Scene_Naroom_Vash_North = 48
Scene_Naroom_Vash_Northwest = 49
Scene_Naroom_Vash_TopStairs = 50
Scene_Naroom_Vash_Top = 51
Scene_Naroom_Vash_Southwest_InnRoom = 52
Scene_Naroom_Vash_Southwest_ShopRoom = 53
Scene_Naroom_Vash_Southeast_SmithRoom = 54
Scene_Naroom_Vash_Northwest_HistorianRoom = 55
Scene_Naroom_Vash_Training = 56
Scene_Naroom_Vash_Northwest_TrynRoom = 57
Scene_Naroom_Vash_Top_OrwinRoom_Entrance = 58
Scene_Naroom_Vash_Top_OrwinRoom_Observatory = 59
Scene_Naroom_Vash_North_RoomA = 60
Scene_Naroom_Vash_North_RoomB = 61
Scene_Naroom_Vash_Southeast_Room = 62
Scene_Naroom_Vash_North_SpookyRoom_Normal = 63
Scene_Naroom_Vash_Sky = 64
Scene_Naroom_Vash_Training_Closet = 65
Scene_Naroom_Vash_Southeast_CurioRoom = 66
Scene_Cald_Archery = 67
Scene_Naroom_Vash_South_AgovoRoom = 340
Scene_Naroom_Vash_Southwest_PipesRoom_Pathway_West = 384
Scene_Naroom_Vash_Southwest_PipesRoom_Back = 385
Scene_Naroom_Vash_Southwest_PipesRoom_Pathway_East = 388
Scene_Naroom_Vash_North_SpookyRoom_Overgrown = 395
// Set: Tavel Gorge
Scene_Misc_Tavel_Outside = 69
Scene_Misc_Tavel_Entrance = 70
Scene_Misc_Tavel_Maze = 71
Scene_Misc_Tavel_Crystal = 72
// Set: Underneath
Scene_Underneath_Mushroom_WestEntrance = 74
Scene_Underneath_Mushroom_North = 75
Scene_Underneath_Mushroom_East = 76
Scene_Underneath_Mushroom_South = 77
Scene_Underneath_Mushroom_Center = 78
Scene_Underneath_Garage_House = 79
Scene_Underneath_Garage_Room = 80
Scene_Underneath_Mushroom_East_RescueRoom = 81
Scene_Underneath_Mushroom_East_Ormagon = 82
Scene_Underneath_Geyser_SouthEntrance = 83
Scene_Underneath_Geyser_Southwest = 84
Scene_Underneath_Geyser_Altar = 85
Scene_Underneath_Geyser_CavedIn = 86
Scene_Underneath_Geyser_Northwest = 87
Scene_Underneath_Geyser_Northeast = 88
Scene_Underneath_Geyser_CulDeSac = 89
Scene_Underneath_Geyser_Southeast = 90
Scene_Underneath_Geyser_CoreStone = 91
Scene_Cald_Vents_Hyren = 92
Scene_Underneath_Mushroom_House = 93
Scene_Underneath_Mushroom_GrukRoom = 94
Scene_Underneath_Bogrom_Normal = 95
Scene_Underneath_Bogrom_Destroyed = 96
Scene_Underneath_Bogrom_GenericRoom = 97
Scene_Underneath_Bogrom_InnRoom = 98
Scene_Underneath_Bogrom_HistorianRoom = 99
Scene_Underneath_Bogrom_GogorRoom = 100
Scene_Underneath_Bogrom_MotashRoom = 101
Scene_Underneath_Bogrom_UlkRoom = 102
Scene_Underneath_Bogrom_BrubRoom = 103
Scene_Underneath_Whackamole = 104
Scene_Underneath_Tunnels_Mouth = 105
Scene_Underneath_Tunnels_IntersectionHyren = 106
Scene_Underneath_Tunnels_StairsHyren = 107
Scene_Underneath_Tunnels_PathwayHyrenFortIntersections = 108
Scene_Underneath_Tunnels_IntersectionFort = 109
Scene_Underneath_Tunnels_PathwayFort = 110
Scene_Underneath_Tunnels_PathwayFortLoopIntersections_A = 111
Scene_Underneath_Tunnels_PathwayFortLoopIntersections_B = 112
Scene_Underneath_Tunnels_PathwayFortLoopIntersections_C = 113
Scene_Underneath_Tunnels_PathwayFortLoopIntersections_D = 114
Scene_Underneath_Tunnels_WestCache_Rock = 115
Scene_Underneath_Tunnels_WestCache_End = 116
Scene_Underneath_Tunnels_WestCache_Pathway = 117
Scene_Underneath_Tunnels_Loop_IntersectionWestCache = 118
Scene_Underneath_Tunnels_Loop_PathwayLoopWestCacheIntersections = 119
Scene_Underneath_Tunnels_Loop_LoopIntersection = 120
Scene_Underneath_Tunnels_Loop_Center = 121
Scene_Underneath_Tunnels_Loop_PathwayLoopEndEastCacheIntersections = 122
Scene_Underneath_Tunnels_Loop_IntersectionEndEastCache = 123
Scene_Underneath_Tunnels_EastCache = 124
Scene_Underneath_Tunnels_Exit = 125
Scene_Underneath_EastTunnel_Intersection = 126
Scene_Underneath_EastTunnel_PathwayFort = 127
Scene_Underneath_EastTunnel_PathwayTunnels = 128
Scene_Underneath_Mushroom_Geyser = 346
// Set: Weave
Scene_Core_End_Greenery = 130
Scene_Orothe_Dock_Western_Ferry = 131
Scene_Orothe_Dock_Eastern_Ferry = 132
Scene_Orothe_Ocean_Ferry = 133
Scene_Naroom_Gia_House_Normal = 134
Scene_Naroom_Gia_Room = 135
Scene_Naroom_Weave_Entrance = 136
Scene_Naroom_Weave_Ponds = 137
Scene_Naroom_Weave_River = 138
Scene_Naroom_Windmill_Outside = 139
Scene_Naroom_Weave_Exit = 140
Scene_Naroom_Weave_KeyMaze = 141
Scene_Underneath_Tunnels_Outside = 142
Scene_Naroom_Windmill_Room = 143
Scene_Naroom_Glade_Cave_Entrance = 144
Scene_Orothe_Dock_Eastern_Empty = 347
Scene_Orothe_Dock_Western_Empty = 389
Scene_Naroom_Gia_House_Destroyed = 396
// Set: Orothe
Scene_Orothe_Mar_Town = 146
Scene_Orothe_Mar_InnRoom = 147
Scene_Orothe_Mar_MobisRoom = 148
Scene_Orothe_Mar_LibraryRoom = 149
Scene_Orothe_Tunnels_PathwayMarUnderwater_Unused = 150
Scene_Orothe_Coral_Entrance = 151
Scene_Orothe_Coral_PathwayHorizontal = 152
Scene_Orothe_Coral_PathwayVertical = 153
Scene_Orothe_Coral_End = 154
Scene_Orothe_Coral_TunnelsChute = 155
Scene_Orothe_Geyser_Pathway = 156
Scene_Orothe_Geyser_Middle = 157
Scene_Orothe_Geyser_North = 158
Scene_Orothe_Geyser_East = 159
Scene_Orothe_Geyser_South = 160
Scene_Orothe_Geyser_West = 161
Scene_Orothe_Geyser_SouthwestPathway = 162
Scene_Orothe_Geyser_SoutheastPathway = 163
Scene_Orothe_Geyser_Southeast = 164
Scene_Orothe_Geyser_Southwest = 165
Scene_Orothe_Geyser_Currents = 166
Scene_Orothe_Geyser_Entrance = 167
Scene_Orothe_Geyser_CoreStone = 168
Scene_Orothe_Island_Room = 169
Scene_Orothe_Island_Outside = 170
Scene_Orothe_Ruins_Entrance = 171
Scene_Orothe_Ruins_Blurry = 172
Scene_Orothe_Ruins_Southwest = 173
Scene_Orothe_Tunnels_Entrance = 174
Scene_Orothe_Tunnels_IntersectionMain = 175
Scene_Orothe_Tunnels_PathwayMarA = 176
Scene_Orothe_Tunnels_PathwayMarB = 177
Scene_Orothe_Tunnels_Whirlpool = 178
Scene_Orothe_Tunnels_Alcove = 179
Scene_Orothe_Tunnels_IntersectionCache = 180
Scene_Orothe_Tunnels_Cache = 181
Scene_Orothe_Tunnels_VaultEntrance = 182
Scene_Orothe_Tunnels_VaultRoom = 183
Scene_Orothe_Tunnels_PathwayMarUnderwater = 184
Scene_Orothe_Ocean_Raft = 387
// Set: Shadowhold
Scene_Core_Shadowhold_Middle_StartCells = 186
Scene_Core_Shadowhold_Middle_Door = 187
Scene_Core_Shadowhold_Marina_Start = 188
Scene_Core_Shadowhold_Marina_FalseIntersection = 189
Scene_Core_Shadowhold_Marina_Room = 190
Scene_Core_Shadowhold_Marina_Pathway = 191
Scene_Core_Shadowhold_Marina_Jump = 192
Scene_Core_Shadowhold_Middle_FirstPuzzle = 193
Scene_Core_Shadowhold_Middle_FirstPathway = 194
Scene_Core_Shadowhold_Middle_FirstIntersection = 195
Scene_Core_Shadowhold_Middle_NorthPathway_Door = 196
Scene_Core_Shadowhold_Middle_NorthPathway_Cells = 197
Scene_Core_Shadowhold_Middle_SouthPathway_Cell = 198
Scene_Core_Shadowhold_Middle_SouthPathway_ScrewRoom = 199
Scene_Core_Shadowhold_Middle_EastPathway_Door = 200
Scene_Core_Shadowhold_Middle_EastPathway_BigPuzzle = 202
Scene_Core_Shadowhold_Middle_EastPathway_ArrowRoom = 203
Scene_Core_Shadowhold_Labyrinth_Entrance = 204
Scene_Core_Shadowhold_Labyrinth_South = 205
Scene_Core_Shadowhold_Labyrinth_North = 206
Scene_Core_Shadowhold_Labyrinth_PuzzlePathway = 207
Scene_Core_Shadowhold_Deep_Cells = 208
Scene_Core_Shadowhold_Deep_Intersection = 209
Scene_Core_Shadowhold_Deep_FirstPuzzle = 210
Scene_Core_Shadowhold_Deep_TwoPuzzles = 211
Scene_Core_Shadowhold_Deep_SouthPathway = 212
Scene_Core_Shadowhold_Deep_NorthPathway = 213
Scene_Core_Shadowhold_Deep_End = 214
Scene_Core_Smith_Smith = 215
Scene_Core_Smith_Backyard_Entrance = 216
Scene_Core_Smith_Backyard_Pathway = 217
Scene_Core_Smith_Backyard_End = 218
// Set: Core
Scene_Core_End_Bridge = 220
Scene_Core_End_Agram = 221
Scene_Core_End_Entrance = 222
Scene_Core_End_Pathway = 223
Scene_Core_End_Room = 224
Scene_Core_End_Field = 225
Scene_Core_End_Antechamber = 226
// Set: Hidden/Fort
Scene_Underneath_Mushroom_Room_UNUSED1 = 228
Scene_Underneath_Mushroom_Room_UNUSED2 = 229
Scene_Underneath_Fort_Outside = 230
Scene_Underneath_Fort_GroundFloorRoom = 231
Scene_Underneath_Fort_SecondFloorRoom_OpenDoor = 232
Scene_Underneath_Fort_SecondFloorRoom_ClosedDoor = 233
Scene_Arderial_Fort_Outside = 234
Scene_Arderial_Fort_UNUSED = 235
Scene_Naroom_Forest_Puzzle_CacheRoom = 236
Scene_Naroom_Forest_Puzzle_CacheRoom_BlastRoom = 237
Scene_Underneath_Tunnels_Hyren_Entrance = 238
Scene_Underneath_Tunnels_Hyren_Exit = 239
Scene_Cald_Caverns_PathwayU_CacheRoom_UNUSED1 = 240
Scene_Cald_Caverns_PathwayU_CacheRoom_UNUSED2 = 241
Scene_Cald_Caverns_PathwayU_CacheRoom = 242
Scene_Misc_StartScreen_Main = 243
Scene_Misc_StartScreen_Pathway = 245
Scene_Misc_StartScreen_Jukebox = 247
Scene_Underneath_Mushroom_GrukRoom_BasementRoom = 248
Scene_Underneath_Mushroom_GrukRoom_TeleportCore = 249
Scene_Naroom_Glade_Cave_TeleportCore = 250
Scene_Underneath_Tunnels_Hyren_IntersectionCald = 251
Scene_Underneath_Tunnels_FortConnectionCacheRoom = 252
Scene_Naroom_Vash_ChallengeAgovo = 253
Scene_Underneath_EastTunnel_Intersection_BlastRoom = 254
Scene_Underneath_Tunnels_Loop_PathwayLoopEndEastCacheIntersections_BlastRoom = 255
Scene_Underneath_Tunnels_Exit_CacheRoom = 256
Scene_Underneath_Tunnels_Exit_CacheRoom_RockRoom = 257
Scene_Misc_Teleport_UNUSED1 = 258
Scene_Misc_Teleport_UNUSED2 = 259
Scene_Misc_Teleport_UNUSED3 = 260
Scene_Arderial_Fort_TeleportNaroom = 261
Scene_Naroom_Vash_Sky_TeleportArderialRoom = 262
Scene_Core_Smith_TeleportNaroom = 263
Scene_Core_Smith_TeleportUnderneath = 264
// Set: Overworld
Scene_Overworld_Naroom = 266
Scene_Overworld_Underneath = 267
Scene_Overworld_Cald = 268
Scene_Overworld_Orothe = 269
Scene_Overworld_Arderial = 270
// Set: Cald
Scene_Cald_Geyser_Entrance = 272
Scene_Cald_Geyser_PuzzlesA = 273
Scene_Cald_Geyser_PuzzlesB = 274
Scene_Cald_Geyser_Antechamber = 275
Scene_Cald_Geyser_CoreStone = 276
Scene_Cald_Volcano_Hyren = 277
Scene_Cald_Ashyn_NorthGeyser = 278
Scene_Cald_Ashyn_Center = 279
Scene_Cald_Ashyn_West = 280
Scene_Cald_Ashyn_East = 281
Scene_Cald_Ashyn_SouthBridge = 282
Scene_Cald_Ashyn_Center_HistorianRoom = 283
Scene_Cald_Ashyn_Center_ErynRoom = 284
Scene_Cald_Ashyn_Center_AshgarRoom = 285
Scene_Cald_Ashyn_East_Room = 286
Scene_Cald_Ashyn_West_InnRoom = 287
Scene_Cald_Ashyn_West_SmithRoom = 288
Scene_Cald_Valkan_House = 289
Scene_Cald_Valkan_Room = 290
Scene_Cald_Ashyn_UNUSED = 291
Scene_Cald_Caverns_Entrance = 292
Scene_Cald_Caverns_PathwayEntranceHorizontal = 293
Scene_Cald_Caverns_IntersectionX = 294
Scene_Cald_Caverns_PathwayZ = 295
Scene_Cald_Caverns_Pathway7 = 296
Scene_Cald_Caverns_PathwayI = 297
Scene_Cald_Caverns_IntersectionTriple = 298
Scene_Cald_Caverns_Detour_Pathway = 299
Scene_Cald_Caverns_Detour_End = 300
Scene_Cald_Caverns_PathwayU = 301
Scene_Cald_Caverns_PathwayExitHorizontal = 302
Scene_Cald_Caverns_Exit = 303
Scene_Cald_Tunnels_Entrance = 304
Scene_Cald_Tunnels_IntersectionNorth = 305
Scene_Cald_Tunnels_PathwayWest = 306
Scene_Cald_Tunnels_PathwayCenter = 307
Scene_Cald_Tunnels_PathwayEast = 308
Scene_Cald_Tunnels_IntersectionExit = 309
Scene_Cald_Vents_PathwayA = 310
Scene_Cald_Vents_PathwayB = 311
Scene_Cald_Vents_Intersection = 312
Scene_Cald_Vents_PathwayIsland = 313
Scene_Cald_Vents_Island = 314
Scene_Cald_Vents_BrokenBridge = 315
Scene_Cald_Vents_Entrance = 316
Scene_Cald_Vents_BrokenBridgeEnd = 317
Scene_Cald_Vents_CacheRoomA = 318
Scene_Cald_Vents_CacheRoomB = 392
Scene_Cald_Vents_CacheRoomC = 394
Scene_Cald_Vents_PathwayIsland_RescueRoom = 319
// Set: Arderial
Scene_Arderial_Palace_Outside = 321
Scene_Arderial_Inn_Outside = 322
Scene_Arderial_Historian_Outside = 323
Scene_Arderial_Shop_Outside = 324
Scene_Arderial_Palace_EntranceRoom = 325
Scene_Arderial_Palace_DoubleRoom = 326
Scene_Arderial_Palace_SecondFloorRoom = 327
Scene_Arderial_Middle_House_BasementRoom = 328
Scene_Arderial_Historian_WestRoom = 329
Scene_Arderial_Historian_UpstairsRoom = 330
Scene_Arderial_Shop_Room = 331
Scene_Arderial_Historian_EastRoom = 332
Scene_Arderial_Geyser_Remix_Arderial_Entrance = 348
Scene_Arderial_Geyser_Remix_Arderial_KeyMaze = 349
Scene_Arderial_Geyser_Remix_Underneath_West = 333
Scene_Arderial_Geyser_Remix_Cald_West = 350
Scene_Arderial_Geyser_Remix_Underneath_East = 334
Scene_Arderial_Geyser_Remix_Cald_East = 351
Scene_Arderial_Geyser_Remix_Cache_East = 335
Scene_Arderial_Geyser_Remix_Cache_West = 336
Scene_Arderial_Geyser_Remix_Naroom_West = 337
Scene_Arderial_Geyser_Remix_Naroom_East = 338
Scene_Arderial_Geyser_Remix_Orothe_West = 352
Scene_Arderial_Geyser_Remix_Orothe_East = 353
Scene_Arderial_Geyser_Pipes1_Entrance = 354
Scene_Arderial_Geyser_Pipes1_Entrance_BackroomCache = 355
Scene_Arderial_Geyser_Pipes1_StarryCache = 356
Scene_Arderial_Geyser_Pipes1_PipeToStarryCache = 357
Scene_Arderial_Geyser_Pipes1_MiddlePipeSwitch = 358
Scene_Arderial_Geyser_Pipes1_End = 359
Scene_Arderial_Geyser_Pipes2_Entrance = 360
Scene_Arderial_Geyser_Pipes2_PipeAnalysis = 361
Scene_Arderial_Geyser_Pipes2_MiddlePipeSwitch = 362
Scene_Arderial_Geyser_Pipes2_End = 363
Scene_Arderial_Geyser_End_GlassMaze = 364
Scene_Arderial_Geyser_End_CoreStone = 365
Scene_Arderial_Geyser_Pipes2_GlassField = 366
Scene_Arderial_Geyser_End_CaldCache = 367
Scene_Arderial_Middle_Entrance = 368
Scene_Arderial_Middle_PathwayEntrance = 369
Scene_Arderial_Middle_Intersection = 370
Scene_Arderial_Middle_PathwayHouse = 371
Scene_Arderial_Middle_House = 372
Scene_Arderial_Middle_End = 373
Scene_Arderial_North_SoutheastEntrance = 374
Scene_Arderial_North_Southwest = 375
Scene_Arderial_North_East = 376
Scene_Arderial_North_Center = 377
Scene_Arderial_North_West = 378
Scene_Arderial_North_Northeast = 379
Scene_Arderial_North_NorthwestExit = 380
Scene_Arderial_Entrance = 381
Scene_Arderial_South_North = 382
Scene_Arderial_South_South = 383
Scene_Arderial_Palace_Throneroom = 339
Scene_Arderial_Inn_Room = 386
Scene_Arderial_Geyser_HorizontalPipe_Unused = 390
Scene_Arderial_Geyser_VerticalPipe_Unused = 391
// Set: Misc
Scene_Misc_Whackamole_Debug = 393
Scene_Misc_MagiNationSplashScreen = 397
// End of autogenerated scene_to_rascript.py

// Gets Scene ID via pointer
BaseStruct_SceneRelatedStruct_SceneObjectPointer = map(0x03000A38)
BaseStruct_SceneRelatedStruct_SceneObjectPointer_Offset_SceneID = 0x0C
function scene_id() =>
    word(pointer(BaseStruct_SceneRelatedStruct_SceneObjectPointer, BaseStruct_SceneRelatedStruct_SceneObjectPointer_Offset_SceneID))

// Copy of the above function with prev recursively added
function prev_scene_id() =>
    prev(word(prev(pointer(BaseStruct_SceneRelatedStruct_SceneObjectPointer, BaseStruct_SceneRelatedStruct_SceneObjectPointer_Offset_SceneID))))
///////////////
// Byte Code //
///////////////

Script_LinkedList = map(0x03003508)
ScriptStruct_Frame = 0x04
ScriptStruct_FrameOffset = 0x14
function get_nth_script_frame(n) =>
    dword(pointer(get_nth_linked_list_entry(n, Script_LinkedList), ScriptStruct_Frame))

function get_nth_script_offset(n) =>
    dword(pointer(get_nth_linked_list_entry(n, Script_LinkedList), ScriptStruct_FrameOffset))

function get_nth_script(n) =>
    get_nth_script_frame(n) + get_nth_script_offset(n)

// Copy of the 3 above functions, but recursively added prev()
function prev_get_nth_script_frame(n) =>
    prev(dword(prev(pointer(prev_get_nth_linked_list_entry(n, Script_LinkedList), ScriptStruct_Frame))))

function prev_get_nth_script_offset(n) =>
    prev(dword(prev(pointer(prev_get_nth_linked_list_entry(n, Script_LinkedList), ScriptStruct_FrameOffset))))

function prev_get_nth_script(n) =>
    prev_get_nth_script_frame(n) + prev_get_nth_script_offset(n)
////////////////////////////
// Misc General Functions //
////////////////////////////

function splash_screen() =>
    dword(BaseStruct_SceneRelatedStruct_SceneObjectPointer) == 0 // Scene has a null pointer

function game_loaded() =>
    prev(scene_id()) != Scene_Misc_StartScreen_Main

//////////////////
// Achievements //
//////////////////

// Ring-Related //
//////////////////
function count_equipped_rings() =>
    sum_of(range(0, 9), i => equipped_ring(i)/EquippedRing_None)
achievement(
    title = "Bling Bling", points = 3,
    description = "Equip 10 Rings",
    id = 000000, type = "",
    trigger = game_loaded() && changes_from_to(count_equipped_rings(), 1, 0)
)

function creature_4th_ability_unlocked(i) =>
    (InventoryStruct_RingCount > i) && changes_to(get_creature(0, i, Creature_Offset_UnlockLevelAbility4), Creature_Ability_Unlocked)
achievement(
    title = "Full Arsenal", points = 3,
    description = "Get a Dream Creature with 4 unique abilities",
    id = 000000, type = "",
    trigger = game_loaded() && !changes(InventoryStruct_RingCount) && any_of_creature(creature_4th_ability_unlocked) // Works for level up, power, forge
)

function dan_cur_energy() =>
    get_creature(0, -1, Creature_Offset_CurEnergy)
function dan_max_energy() =>
    get_creature(0, -1, Creature_Offset_MaxEnergy)
function dan_level() =>
    get_creature(0, -1, Creature_Offset_Level)

Dan_Energy_Level1 = 100
// Level 2-31 = 10 energy per level
Dan_Energy_Level31 = Dan_Energy_Level1 + 10*(31 - 1)
// Level 32-59 = 16 energy per level
Dan_Energy_Level59 = Dan_Energy_Level31 + 16*(59 - 31)
// Level 60-99 = 1 energy per level

Extra_Energy_Target = 5*10

function drank_10_water() =>
    measured(
        (dan_max_energy() - Dan_Energy_Level1 - 10*(dan_level() - 1)) == Extra_Energy_Target,
        when = dan_level() < 32,
        format = "percent"
    ) ||
    measured(
        (dan_max_energy() - Dan_Energy_Level31 - 16*(dan_level() - 31)) == Extra_Energy_Target,
        when = dan_level() >= 32 && dan_level() < 60,
        format = "percent"
    ) ||
    measured(
        (dan_max_energy() - Dan_Energy_Level59 - 1*(dan_level() - 59)) == Extra_Energy_Target,
        when = dan_level() >= 60,
        format = "percent"
    )

achievement(
    title = "Hydro Homie", points = 5,
    description = "Drink 10 Waters of Life",
    id = 000000, type = "",
    trigger = game_loaded() && decreases(item(Item_WaterOfLife)) && drank_10_water()
)

// Forge Ring //
////////////////



function forge(creature) =>
    increases(InventoryStruct_RingCount) && get_creature(0, InventoryStruct_RingCount - 1, Creature_Offset_ID) == creature

achievement(
    title = "Great Furok", points = 5,
    description = "Obtain a Great Furok by almost escaping the Tavel Gorge caves",
    id = 000000, type = "missable",
    trigger = game_loaded() && Nrm_Intro_Count < 2 && forge(Creature_Furok) && First_Creature == 2
)
achievement(
    title = "Leaves that Cut", points = 5,
    description = "Forge Leaf Hyren",
    id = 000000, type = "",
    trigger = game_loaded() && forge(Creature_LeafHyren)
)
achievement(
    title = "Tree Power", points = 5,
    description = "Forge Timber Hyren",
    id = 000000, type = "",
    trigger = game_loaded() && forge(Creature_TimberHyren)
)
achievement(
    title = "Pummel Party", points = 5,
    description = "Forge Mushroom Hyren",
    id = 000000, type = "",
    trigger = game_loaded() && forge(Creature_MushroomHyren)
)
achievement(
    title = "Bury Your Foes", points = 5,
    description = "Forge Cave Hyren",
    id = 000000, type = "",
    trigger = game_loaded() && forge(Creature_CaveHyren)
)
achievement(
    title = "Flightless Wings", points = 5,
    description = "Forge Magma Hyren",
    id = 000000, type = "missable",
    trigger = game_loaded() && forge(Creature_MagmaHyren)
)
achievement(
    title = "Purifying Flame", points = 5,
    description = "Forge Flame Hyren",
    id = 000000, type = "missable",
    trigger = game_loaded() && forge(Creature_FlameHyren)
)
achievement(
    title = "Sitting Pretty", points = 5,
    description = "Forge Coral Hyren",
    id = 000000, type = "",
    trigger = game_loaded() && forge(Creature_CoralHyren)
)
achievement(
    title = "Ruler of the Depths", points = 5,
    description = "Forge Deep Hyren",
    id = 000000, type = "",
    trigger = game_loaded() && forge(Creature_DeepHyren)
)
achievement(
    title = "Beast of the Sea", points = 5,
    description = "Forge Megathan",
    id = 000000, type = "",
    trigger = game_loaded() && forge(Creature_Megathan)
)
achievement(
    title = "Zeus' Bolt", points = 5,
    description = "Forge Lightning Hyren",
    id = 000000, type = "",
    trigger = game_loaded() && forge(Creature_LightningHyren)
)
achievement(
    title = "Thor's Hammer", points = 5,
    description = "Forge Thunder Hyren",
    id = 000000, type = "",
    trigger = game_loaded() && forge(Creature_ThunderHyren)
)
achievement(
    title = "Wind Fish", points = 5,
    description = "Forge Orathan Flyer",
    id = 000000, type = "",
    trigger = game_loaded() && forge(Creature_OrathanFlyer)
)
achievement(
    title = "Middle Management", points = 1,
    description = "Forge Darkbreed Hyren",
    id = 000000, type = "",
    trigger = game_loaded() && forge(Creature_DarkbreedHyren)
)
achievement(
    title = "Pure Terror", points = 5,
    description = "Forge Core Hyren",
    id = 000000, type = "",
    trigger = game_loaded() && forge(Creature_CoreHyren)
)
achievement(//TODO
    title = "Gotta Catch 'Em All", points = 50,
    description = "Forge all the Dream Creatures",
    id = 000000, type = "",
    trigger = game_loaded() && always_false() // TODO
)

// Spells //
////////////

achievement(
    title = "Throw Leaves at Enemies", points = 1,
    description = "Obtain Leaf Cut in Naroom",
    id = 000000, type = "",
    trigger = game_loaded() && increases(spell(Spell_LeafCut))
)
achievement(
    title = "Throw Healing at Friends", points = 1,
    description = "Obtain Grow in Naroom",
    id = 000000, type = "",
    trigger = game_loaded() && increases(spell(Spell_Grow))
)
achievement(
    title = "Rock and Roll", points = 3,
    description = "Obtain Cave In in the Underneath Shadow Geyser",
    id = 000000, type = "missable",
    trigger = game_loaded() && increases(spell(Spell_CaveIn))
)
achievement(
    title = "Ready to Rumble", points = 3,
    description = "Obtain Thunderquake in the Underneath Shadow Geyser",
    id = 000000, type = "missable",
    trigger = game_loaded() && increases(spell(Spell_Thunderquake))
)
achievement(
    title = "Have Some Flame", points = 5,
    description = "Obtain Fireball in the Cald",
    id = 000000, type = "",
    trigger = game_loaded() && increases(spell(Spell_Fireball))
)
achievement(
    title = "After the Flame, Only Ashes Remain", points = 2,
    description = "Obtain Flame Geyser in the Cald Shadow Geyser",
    id = 000000, type = "missable",
    trigger = game_loaded() && increases(spell(Spell_FlameGeyser))
)
achievement(
    title = "Bogged Down by Seaweed", points = 1,
    description = "Obtain Entangle in Orothe",
    id = 000000, type = "",
    trigger = game_loaded() && increases(spell(Spell_Entangle))
)
Script_OrotheHistorian_DispelXEnd = 0x0819658A
achievement(
    title = "Where Are My Glasses?", points = 1,
    description = "Decipher the Blurry Scroll in Orothe",
    id = 000000, type = "",
    trigger = game_loaded() && get_nth_script(1) == Script_OrotheHistorian_DispelXEnd
)
achievement(
    title = "Bend Water to Your Will", points = 3,
    description = "Obtain Tidal Wave in the Orothe Shadow Geyser",
    id = 000000, type = "missable",
    trigger = game_loaded() && increases(spell(Spell_TidalWave))
)
achievement(//TODO
    title = "Zaptacular", points = 3,
    description = "Obtain Lightning before facing Morag",
    id = 000000, type = "missable",
    trigger = game_loaded() && increases(spell(Spell_Lightning))
)
achievement(//TODO
    title = "Winds of Protection", points = 3, // TODO what does Updraft do in GBA? Maybe name needs to change
    description = "Obtain Updraft before facing Morag",
    id = 000000, type = "missable",
    trigger = game_loaded() && increases(spell(Spell_Updraft))
)

// Abilities //
///////////////
Script_Eidon_DidItWork = 0x081838DA
achievement(
    title = "Welcome to the Jungle", points = 1,
    description = "Obtain the Translation Bracelet",
    id = 000000, type = "progression",
    trigger = game_loaded() && get_nth_script(1) == Script_Eidon_DidItWork
)
achievement(
    title = "You're the Best Around", points = 1,
    description = "Obtain the Energy Band",
    id = 000000, type = "progression",
    trigger = game_loaded() && changes_from_to(HeroAbilities, 0, 1)
)
Script_Eidon_CrystalGloves = 0x08187614
achievement(
    title = "But Where Do My Pinkies Go?", points = 1,
    description = "Obtain the Crystal Gloves",
    id = 000000, type = "progression",
    trigger = game_loaded() && get_nth_script(1) == Script_Eidon_CrystalGloves // Optimize timing over using HeroAbilities
)
achievement(
    title = "Fancy Footwear", points = 2,
    description = "Obtain Agadon's Boots",
    id = 000000, type = "progression",
    trigger = game_loaded() && changes_from_to(HeroAbilities, 2, 3)
)
achievement(
    title = "Under the Sea", points = 2,
    description = "Obtain the Orothean Belt",
    id = 000000, type = "progression",
    trigger = game_loaded() && increases(OrotheanBelt)
)
Script_Jaela_EyeOfTheStorm = 0x081AD11C
achievement(
    title = "Highway to Heaven", points = 3,
    description = "Meet the Queen",
    id = 000000, type = "progression",
    trigger = game_loaded() && get_nth_script(5) == Script_Jaela_EyeOfTheStorm
)

// Geysers //
/////////////

// Hero of Naroom & Underneath: See Battles
achievement(
    title = "Hero of the Cald", points = 5,
    description = "Complete the Cald Shadow Geyser",
    id = 000000, type = "progression",
    trigger = game_loaded() && changes_from_to(Glyph_Count, 3, 4)
)
achievement(
    title = "Hero of Orothe", points = 10,
    description = "Complete the Orothe Shadow Geyser",
    id = 000000, type = "progression",
    trigger = game_loaded() && changes_from_to(Glyph_Count, 4, 5)
)
achievement(//TODO
    title = "Hero of Arderial", points = 10,
    description = "Defeat Morag",
    id = 000000, type = "progression",
    trigger = game_loaded() && changes_from_to(Glyph_Count, 5, 6)
)


// Collections //
/////////////////
// Includes all obtainable treasure chest items except the Core Ringsmith's extra Star Key
// Exclude Hollow Stool and Algae so that the achievements are not missable
// Does not include gifts from KaEryn or Valkan, HldPrisoner, Shadowhold Key on ground, Wence's Arrow
achievement(
    title = "Smash All the Pots", points = 10,
    description = "Open all the chests and in Naroom and the Weave, and find the 2 items hidden in Vash Naroom and 1 item hidden in the Wheat Farm",
    id = 000000, type = "missable",
    trigger = collection(Treasure_Naroom, Treasure_Naroom_Length) // Requires Orothean Belt and Ashgar's Key
)
achievement(
    title = "Baby's First Pokedex", points = 1,
    description = "Open all the chest in the Naroom Geyser",
    id = 000000, type = "missable",
    trigger = collection(Treasure_NaroomGeyser, Treasure_NaroomGeyser_Length)
)
achievement(
    title = "Professional Excavation", points = 10,
    description = "Open all the chests in the Underneath",
    id = 000000, type = "",
    trigger = collection(Treasure_Underneath, Treasure_Underneath_Length) // Requires Agadon's Boots
)
achievement(
    title = "Running in Circles", points = 5,
    description = "Open all the chests in the Underneath Geyser",
    id = 000000, type = "missable",
    trigger = collection(Treasure_UnderneathGeyser, Treasure_UnderneathGeyser_Length)
)
achievement(
    title = "Burning Up", points = 10,
    description = "Open all the chests in the Cald",
    id = 000000, type = "",
    trigger = collection(Treasure_Cald, Treasure_Cald_Length) // Requires Agadon's Boots
)
achievement(
    title = "Molten Animite", points = 5,
    description = "Open all the chests in the Cald Geyser",
    id = 000000, type = "missable",
    trigger = collection(Treasure_CaldGeyser, Treasure_CaldGeyser_Length)
)
achievement(
    title = "No Sense of Self-Preservation", points = 10,
    description = "Open all the chests in the Shadowhold",
    id = 000000, type = "missable",
    trigger = collection(Treasure_Shadowhold, Treasure_Shadowhold_Length)
)
achievement(
    title = "Fishing for Booty", points = 10,
    description = "Open all the chests in Orothe, including the invisible hidden chest in the Underwater Ruins",
    id = 000000, type = "",
    trigger = collection(Treasure_Orothe, Treasure_Orothe_Length)
)
achievement(
    title = "Swept Away", points = 5,
    description = "Open all the chests in the Orothe Geyser",
    id = 000000, type = "missable",
    trigger = collection(Treasure_OrotheGeyser, Treasure_OrotheGeyser_Length)
)
achievement(
    title = "Taste the Rainbow", points = 5,
    description = "Open all the chests in Arderial, and find the hidden item in one of the Arderial buildings",
    id = 000000, type = "",
    trigger = collection(Treasure_Arderial, Treasure_Arderial_Length)
)
achievement(//TODO
    title = "Keymaster", points = 5,
    description = "Open all the chests on your way to fight Morag",
    id = 000000, type = "missable",
    trigger = collection(Treasure_ArderialGeyser, Treasure_ArderialGeyser_Length)
)
achievement(
    title = "Junk Collector", points = 1,
    description = "Find all 3 useless items: two Feathers and Wence's Arrow",
    id = 000000, type = "missable",
    trigger = collection(Treasure_Useless, Treasure_Useless_Length)
)
function collection_hldprisoner_prev() =>
    (sum_of(HldPrisonerTalks, x => prev(x)) == HldPrisonerTalks_Length - 1) // Check the delta for HldPrisonerTalk (since we check if all 7 have been rescued in collection_hldprisoner_condition())
function collection_hldprisoner() =>
    measured((sum_of(HldPrisoners, x => x) + sum_of(HldPrisonerTalks, x => x)) == HldPrisoners_Length + HldPrisonerTalks_Length, when=collection_hldprisoner_condition() && game_loaded())  // Measure 14: 7 for freeing, 7 for talking
function collection_hldprisoner_condition() =>
    GameCount == GC_SHADOWHOLD_JAIL || sum_of(HldPrisoners, x => x) == HldPrisoners_Length  // Impossible to complete if you don't rescue all 7 from the Shadowhold
achievement(
    title = "Jailbreak", points = 25,
    description = "After rescuing all 7 prisoners, claim a reward from each of them throughout the world",
    id = 000000, type = "missable",
    trigger = collection_hldprisoner_prev() && collection_hldprisoner()
)
achievement(//TODO
    title = "Simpsons Homage", points = 10,
    description = "Do everything at the Naroom party, then leave",
    id = 000000, type = "missable",
    trigger = measured(sum_of(PartyPeople, x => x) == PartyPeople_Length, when=game_loaded()) // TODO - Add script check
)
achievement(
    title = "Bombs Away", points = 5,
    description = "Open 5 passageways using Blast Urns",
    id = 000000, type = "",
    trigger = collection(BlastUrns, 5) // We only require 5 out of the total of 9
)

// Minigames //
///////////////
Script_AvoidTheAgovos_ReadyGo = 0x0819BAB6
function agovo_start() =>
    AvoidAgovo_Played == 1 && prev_get_nth_script(1) == Script_AvoidTheAgovos_ReadyGo && get_nth_script(1) != Script_AvoidTheAgovos_ReadyGo
function agovo_win() =>
    AvoidAgovo_Win == 1
function agovo_lose() =>
    AvoidAgovo_Played == 0 && AvoidAgovo_Win == 0
function agovo_cancel() => // Eldritch Awl exit
    scene_id() != Scene_Naroom_Vash_South_AgovoRoom && scene_id() != Scene_Naroom_Vash_ChallengeAgovo
achievement(
    title = "Speedy Tony", points = 5,
    description = "Beat Avoid the Agovos in under 7.0 seconds",
    id = 000000, type = "",
    trigger = game_loaded() && disable_when(repeated(70*6 - 1, always_true()), until=agovo_start()) && agovo_win() //Empirically tested to match with displayed leaderboard time
)
achievement(
    title = "Flash Tony", points = 10,
    description = "Beat Avoid the Agovos in under 6.7 seconds",
    id = 000000, type = "",
    trigger = game_loaded() && disable_when(repeated(67*6 - 1, always_true()), until=agovo_start()) && agovo_win()
)
leaderboard(
    title = "Avoid the Agovos",
    description = "Fastest time in Avoid the Agovos",
    start = game_loaded() && agovo_start(),
    cancel = agovo_lose() || agovo_cancel(),
    submit = agovo_win(),
    value = always_true(),
    format = "FRAMES",
    lower_is_better = true,
    id = 0
)

function brub_start() =>
    prev_scene_id() == Scene_Underneath_Bogrom_BrubRoom && scene_id() == Scene_Underneath_Whackamole
function brub_end() =>
    prev_scene_id() == Scene_Underneath_Whackamole && scene_id() == Scene_Underneath_Bogrom_BrubRoom
function brub_cancel() => // Eldritch Awl exit
    scene_id() != Scene_Underneath_Bogrom_BrubRoom && scene_id() != Scene_Underneath_Whackamole
achievement(
    title = "Brub Scrub", points = 5,
    description = "Score at least 70 points in Scrub the Brub",
    id = 000000,
    trigger = brub_end() && Brub_Byte >= 70 // omit game_loaded() as we do a scene check in brub_end()
)
achievement(
    title = "Brub Elite", points = 10,
    description = "Score at least 80 points in Scrub the Brub",
    id = 000000,
    trigger = brub_end() && Brub_Byte >= 80 // omit game_loaded() as we do a scene check in brub_end()
)
leaderboard(
    title = "Scrub the Brub",
    description = "Highest points in Scrub the Brub",
    start = brub_start(), // omit game_loaded() as we do a scene check in brub_start()
    cancel = brub_cancel(),
    submit = brub_end(),
    value = Brub_Byte,
    format = "VALUE",
    lower_is_better = false,
    id = 0
)
// Misc //
//////////
Script_PoopGag_Oh = 0x081882AC
achievement(
    title = "Outhouse", points = 1,
    description = "Look inside Gia's 'storage shed'",
    id = 000000, type = "missable",
    trigger = game_loaded() && get_nth_script(1) == Script_PoopGag_Oh
)
Script_SoapGag_IAlwaysWondered = 0x08187B34
achievement(
    title = "So That's Where Soap Comes From", points = 1,
    description = "Tell Eidon about Oflardt's stories",
    id = 000000, type = "missable",
    trigger = game_loaded() && prev_get_nth_script(1) == Script_SoapGag_IAlwaysWondered && get_nth_script(1) != Script_SoapGag_IAlwaysWondered
)
Script_UnderneathHistorian_Menu = 0x0818AC38
// There are 24 dialogues, each separated exactly by 0x14 bytes
Script_UnderneathHistorian_Dialogue1 = 0x0818AD08
Script_UnderneathHistorian_Dialogue24 = 0x0818AED4
function prev_underneath_historian_menu() =>
    prev_get_nth_script(1) == Script_UnderneathHistorian_Menu
function underneath_historian_dialogue() =>
    get_nth_script(1) >= Script_UnderneathHistorian_Dialogue1 && get_nth_script(1) <= Script_UnderneathHistorian_Dialogue24
achievement(
    title = "Too Many Mushrooms", points = 1,
    description = "Ask the Underneath Historian to identify 10 items",
    id = 000000, type = "missable",
    trigger = game_loaded() && measured(repeated(10, prev_underneath_historian_menu() && underneath_historian_dialogue()))
)
achievement(
    title = "Acquired Taste", points = 3,
    description = "Eat 20 mushrooms",
    id = 000000, type = "missable",
    trigger = game_loaded() && (changes_from_to(Mushrooms_Eaten, 20, 21) || changes_from_to(Mushrooms_Eaten, 40, 21))
)
achievement(
    title = "Fiery Exorcist", points = 3,
    description = "Obtain Maelstrom from Valkan by defeating at least 5 ShadowMagi",
    id = 000000, type = "missable",
    trigger = scene_id() == Scene_Cald_Valkan_Room && measured(Cald_Btl_Count >= 5) && increases(relic(Relic_Maelstorm)) && GameCount == GC_CALD_INTRO // Skip game_loaded since we check scene
)
achievement(
    title = "Skeleton Key", points = 5,
    description = "Find the Channeled Gem using Ashgar's Key",
    id = 000000, type = "missable",
    trigger = game_loaded() && increases(WVEPATHVALLEY07Chest2)
)
achievement(
    title = "Bargainer", points = 3,
    description = "Haggle the ferryman down to his lowest price",
    id = 000000, type = "missable",
    trigger = game_loaded() && changes_from_to(Ferry_Price, 3, 7)
)
function training_door_enabled() =>
    prev(Vash13_Door_Open) == 0 && Vash13_PuzzleFailed == 0 && Vash13_PuzzleEnabled == 1
achievement(
    title = "Closet Unicorn", points = 5,
    description = "Open the training equipment door",
    id = 000000, type = "", // Unlike the GBC, this is not missable because the door is openable at the end of the game
    trigger = scene_id() == Scene_Naroom_Vash_Training && trigger_when(Vash13_Door_Open == 1) && training_door_enabled() 
)
Script_Shadowhold_SecondLargestScrewdriver = 0x081AB204
achievement(
    title = "Second Largest Screwdriver", points = 25,
    description = "Examine the large screwdriver near some Jingjacks",
    id = 000000, type = "missable",
    trigger = game_loaded() && get_nth_script(1) == Script_Shadowhold_SecondLargestScrewdriver
)
Script_Eryn_PinchOfLife = 0x0817D538
Script_Karyn_SpiceOfLife = 0x0817D50E
achievement(
    title = "Double the Pleasure", points = 3,
    description = "Get a Spice of Life from Karyn or a Pinch of Life from Eryn",
    id = 000000, type = "missable",
    trigger = game_loaded() && (get_nth_script(4) == Script_Eryn_PinchOfLife || get_nth_script(4) == Script_Karyn_SpiceOfLife)
)
Script_Orwin_Revived = 0x0817EB3A
achievement(
    title = "Savior", points = 25,
    description = "Cure Orwin",
    id = 000000, type = "missable",
    trigger = game_loaded() && get_nth_script(1) == Script_Orwin_Revived
)
achievement(//TODO
    title = "Funeral", points = 5,
    description = "After defeating Agram, attend a funeral instead of going home",
    id = 000000, type = "missable",
    trigger = game_loaded() && increases(Gia_Funeral)
)
achievement(//TODO
    title = "Spoiled Kyros", points = 10,
    description = "After defeating Agram, attend a party instead of going home",
    id = 000000, type = "missable",
    trigger = game_loaded() && always_false() // TODO
)
Script_Ringsmith_Hello = 0x0819B74E
achievement(
    title = "The Dark Side", points = 10,
    description = "Visit the Core Ringsmith",
    id = 000000, type = "",
    trigger = game_loaded() && get_nth_script(1) == Script_Ringsmith_Hello
)

// Battles //
/////////////
function defeat(magi) =>
     // The Creature_ID resets 2 frames before the BattleExit_Win flag appears, so we can't do a prev unfortunately, and so we use hits. Prior is not great either because it's complicated to handle if you lose the battle
    never(!game_loaded()) && never(!in_battle()) && once(get_creature(1, BattleCreature_Magi, Creature_Offset_ID) == magi) && changes_from_to(Battle_Exit_Code, BattleExit_None, BattleExit_Win)
function magi_maxenergy() =>
    get_creature(1, BattleCreature_Magi, Creature_Offset_MaxEnergy)

achievement(
    title = "Hero of Naroom", points = 5,
    description = "Complete the Naroom Shadow Geyser",
    id = 000000, type = "progression",
    trigger = defeat(Creature_Togoth)
)
achievement(
    title = "Hero of the Underneath", points = 5,
    description = "Complete the Underneath Shadow Geyser",
    id = 000000, type = "progression",
    trigger = defeat(Creature_Ogar)
)
achievement(
    title = "Two Stooges", points = 10,
    description = "Defeat Korg and Zet",
    id = 000000, type = "progression",
    trigger = defeat(Creature_Zet)
)
achievement(
    title = "Weebest", points = 25,
    description = "Defeat Salafy",
    id = 000000, type = "",
    trigger = defeat(Creature_Salafy) && once(magi_maxenergy() == 999) // Salafy has 999 energy in her 4th form. Like the Creature_ID, it resets 2 frames before the BattleExit_Win flag appears
)
achievement(//TODO
    title = "Hero of Magi-Nation", points = 25,
    description = "Defeat Agram",
    id = 000000, type = "win_condition",
    trigger = defeat(Creature_Agram)
)
achievement(//TODO
    title = "Now THAT is a BIG Mushroom", points = 25,
    description = "Encounter Ormagon",
    id = 000000, type = "missable",
    trigger = game_loaded() && in_battle() && get_creature(1, BattleCreature_Enemy2, Creature_Offset_ID) == Creature_Ormagon // We don't really need a delta here, even if the value is not re-initialized on New Game
)

// Battle Mechanics //
//////////////////////
// Drink Water, Fever Dream, One-Hit KO
// Mauled to Death, Damage Not Applied

///////////////////
// Rich Presence //
///////////////////
// Autogenerated by scene_to_rascript.py
scene_lookup = {
    // Set: Naroom
    Scene_Naroom_Forest_Deep_Intersection: "Naroom Forest",
    Scene_Naroom_Forest_Deep_Pathway: "Naroom Forest",
    Scene_Naroom_Forest_Deep_Connection: "Naroom Forest",
    Scene_Naroom_Forest_Deep_Heart: "Naroom Forest",
    Scene_Naroom_Forest_Deep_Cache: "Naroom Forest",
    Scene_Naroom_Forest_Deep_House: "Wence's House",
    Scene_Naroom_Forest_Deep_WenceRoom: "Wence's House",
    Scene_Naroom_Geyser_Southeast: "Naroom Geyser",
    Scene_Naroom_Geyser_South: "Naroom Geyser",
    Scene_Naroom_Geyser_Southwest: "Naroom Geyser",
    Scene_Naroom_Geyser_West: "Naroom Geyser",
    Scene_Naroom_Geyser_Center: "Naroom Geyser",
    Scene_Naroom_Geyser_East: "Naroom Geyser",
    Scene_Naroom_Geyser_Northeast: "Naroom Geyser",
    Scene_Naroom_Geyser_North: "Naroom Geyser",
    Scene_Naroom_Geyser_Northwest: "Naroom Geyser",
    Scene_Naroom_Geyser_Doorway: "Naroom Geyser",
    Scene_Naroom_Geyser_CoreStone: "Naroom Geyser",
    Scene_Naroom_Geyser_Entrance: "Naroom Geyser",
    Scene_Naroom_Grove_Pathway: "Naroom Grove",
    Scene_Naroom_Grove_Entrance: "Naroom Grove",
    Scene_Naroom_Vash_Entrance: "Vash Naroom",
    Scene_Naroom_Glade_GuardEntrance: "Naroom Glade",
    Scene_Naroom_Glade_RingRoad: "Naroom Glade",
    Scene_Naroom_Glade_Intersection: "Naroom Glade",
    Scene_Naroom_Glade_Field: "Naroom Glade",
    Scene_Naroom_Glade_Pathway: "Naroom Glade",
    Scene_Naroom_Glade_Geyser: "Naroom Glade",
    Scene_Naroom_Glade_Cave_Exterior: "Naroom Cave",
    Scene_Naroom_Forest_Puzzle: "Naroom Forest",
    Scene_Underneath_Tunnels_Hyren_Forest: "Hyren's Glade",
    Scene_Naroom_Seers_House: "Seer's House",
    Scene_Naroom_Seers_Room: "Seer's House",
    Scene_Naroom_Seers_Pathway: "Seer's House",
    Scene_Naroom_Seers_Hyren_UnderwaterEntrance: "Under the Seer's House",
    Scene_Naroom_Seers_Hyren_UnderwaterExit: "Under the Seer's House",
    Scene_Naroom_Seers_Hyren_SeaCave: "Under the Seer's House",
    Scene_Naroom_Grove_River: "Naroom Grove",
    Scene_Naroom_Grove_Cache: "Naroom Grove",
    Scene_Misc_Debug: "Hacking! Unused Location!",
    Scene_Naroom_Forest_Exit: "Naroom Forest",
    Scene_Naroom_Forest_Exit_UNUSED1: "Hacking! Unused Location!",
    Scene_Naroom_Forest_Exit_UNUSED2: "Hacking! Unused Location!",
    Scene_Naroom_Vash_BottomStairs: "Vash Naroom",
    Scene_Naroom_Vash_South: "Vash Naroom",
    Scene_Naroom_Vash_Southwest: "Vash Naroom",
    Scene_Naroom_Vash_Southeast: "Vash Naroom",
    Scene_Naroom_Vash_North: "Vash Naroom",
    Scene_Naroom_Vash_Northwest: "Vash Naroom",
    Scene_Naroom_Vash_TopStairs: "Vash Naroom",
    Scene_Naroom_Vash_Top: "Vash Naroom",
    Scene_Naroom_Vash_Southwest_InnRoom: "Poad's Inn",
    Scene_Naroom_Vash_Southwest_ShopRoom: "Vash Naroom Shop",
    Scene_Naroom_Vash_Southeast_SmithRoom: "Pruitt's Ring Shop",
    Scene_Naroom_Vash_Northwest_HistorianRoom: "Evu's House",
    Scene_Naroom_Vash_Training: "Training Grounds",
    Scene_Naroom_Vash_Northwest_TrynRoom: "Tryn's House",
    Scene_Naroom_Vash_Top_OrwinRoom_Entrance: "Orwin's House",
    Scene_Naroom_Vash_Top_OrwinRoom_Observatory: "Orwin's House",
    Scene_Naroom_Vash_North_RoomA: "Vash Naroom",
    Scene_Naroom_Vash_North_RoomB: "Vash Naroom",
    Scene_Naroom_Vash_Southeast_Room: "Vash Naroom",
    Scene_Naroom_Vash_North_SpookyRoom_Normal: "Spooky Kid's House",
    Scene_Naroom_Vash_Sky: "Vash Naroom",
    Scene_Naroom_Vash_Training_Closet: "Training Grounds Closet",
    Scene_Naroom_Vash_Southeast_CurioRoom: "Curio Shop",
    Scene_Cald_Archery: "Hacking! Unused Location!",
    Scene_Naroom_Vash_South_AgovoRoom: "Avoid the Agovos",
    Scene_Naroom_Vash_Southwest_PipesRoom_Pathway_West: "Vash Naroom",
    Scene_Naroom_Vash_Southwest_PipesRoom_Back: "Vash Naroom",
    Scene_Naroom_Vash_Southwest_PipesRoom_Pathway_East: "Vash Naroom",
    Scene_Naroom_Vash_North_SpookyRoom_Overgrown: "Spooky Kid's House",
    // Set: Tavel Gorge
    Scene_Misc_Tavel_Outside: "Tavel Gorge",
    Scene_Misc_Tavel_Entrance: "Tavel Gorge Cave",
    Scene_Misc_Tavel_Maze: "Tavel Gorge Cave",
    Scene_Misc_Tavel_Crystal: "Tavel Gorge Cave",
    // Set: Underneath
    Scene_Underneath_Mushroom_WestEntrance: "Underneath Caverns",
    Scene_Underneath_Mushroom_North: "Underneath Caverns",
    Scene_Underneath_Mushroom_East: "Underneath Caverns",
    Scene_Underneath_Mushroom_South: "Underneath Caverns",
    Scene_Underneath_Mushroom_Center: "Underneath Caverns",
    Scene_Underneath_Garage_House: "Prospector Garage",
    Scene_Underneath_Garage_Room: "Prospector Garage",
    Scene_Underneath_Mushroom_East_RescueRoom: "Underneath Caverns' Secret House",
    Scene_Underneath_Mushroom_East_Ormagon: "Underneath Caverns' Secret Area",
    Scene_Underneath_Geyser_SouthEntrance: "Underneath Geyser",
    Scene_Underneath_Geyser_Southwest: "Underneath Geyser",
    Scene_Underneath_Geyser_Altar: "Underneath Geyser",
    Scene_Underneath_Geyser_CavedIn: "Underneath Geyser",
    Scene_Underneath_Geyser_Northwest: "Underneath Geyser",
    Scene_Underneath_Geyser_Northeast: "Underneath Geyser",
    Scene_Underneath_Geyser_CulDeSac: "Underneath Geyser",
    Scene_Underneath_Geyser_Southeast: "Underneath Geyser",
    Scene_Underneath_Geyser_CoreStone: "Underneath Geyser",
    Scene_Cald_Vents_Hyren: "Lava Vent Cavern",
    Scene_Underneath_Mushroom_House: "Gruk's Mushroom Farm",
    Scene_Underneath_Mushroom_GrukRoom: "Gruk's Mushroom Farm",
    Scene_Underneath_Bogrom_Normal: "Bogrom",
    Scene_Underneath_Bogrom_Destroyed: "Bogrom",
    Scene_Underneath_Bogrom_GenericRoom: "Bogrom",
    Scene_Underneath_Bogrom_InnRoom: "Underneath Inn",
    Scene_Underneath_Bogrom_HistorianRoom: "Bogrom Historian's House",
    Scene_Underneath_Bogrom_GogorRoom: "Gogor's House",
    Scene_Underneath_Bogrom_MotashRoom: "Motash's House",
    Scene_Underneath_Bogrom_UlkRoom: "Ulk's House",
    Scene_Underneath_Bogrom_BrubRoom: "Scrub the Brub",
    Scene_Underneath_Whackamole: "Scrub the Brub",
    Scene_Underneath_Tunnels_Mouth: "Underneath Tunnels",
    Scene_Underneath_Tunnels_IntersectionHyren: "Underneath Tunnels",
    Scene_Underneath_Tunnels_StairsHyren: "Underneath Tunnels",
    Scene_Underneath_Tunnels_PathwayHyrenFortIntersections: "Underneath Tunnels",
    Scene_Underneath_Tunnels_IntersectionFort: "Underneath Tunnels",
    Scene_Underneath_Tunnels_PathwayFort: "Underneath Tunnels",
    Scene_Underneath_Tunnels_PathwayFortLoopIntersections_A: "Underneath Tunnels",
    Scene_Underneath_Tunnels_PathwayFortLoopIntersections_B: "Underneath Tunnels",
    Scene_Underneath_Tunnels_PathwayFortLoopIntersections_C: "Underneath Tunnels",
    Scene_Underneath_Tunnels_PathwayFortLoopIntersections_D: "Underneath Tunnels",
    Scene_Underneath_Tunnels_WestCache_Rock: "Underneath Tunnels",
    Scene_Underneath_Tunnels_WestCache_End: "Underneath Tunnels",
    Scene_Underneath_Tunnels_WestCache_Pathway: "Underneath Tunnels",
    Scene_Underneath_Tunnels_Loop_IntersectionWestCache: "Underneath Tunnels",
    Scene_Underneath_Tunnels_Loop_PathwayLoopWestCacheIntersections: "Underneath Tunnels",
    Scene_Underneath_Tunnels_Loop_LoopIntersection: "Underneath Tunnels",
    Scene_Underneath_Tunnels_Loop_Center: "Underneath Tunnels",
    Scene_Underneath_Tunnels_Loop_PathwayLoopEndEastCacheIntersections: "Underneath Tunnels",
    Scene_Underneath_Tunnels_Loop_IntersectionEndEastCache: "Underneath Tunnels",
    Scene_Underneath_Tunnels_EastCache: "Underneath Tunnels",
    Scene_Underneath_Tunnels_Exit: "Underneath Tunnels",
    Scene_Underneath_EastTunnel_Intersection: "East Underneath Tunnels",
    Scene_Underneath_EastTunnel_PathwayFort: "East Underneath Tunnels",
    Scene_Underneath_EastTunnel_PathwayTunnels: "East Underneath Tunnels",
    Scene_Underneath_Mushroom_Geyser: "Underneath Geyser",
    // Set: Weave
    Scene_Core_End_Greenery: "Core Entrance",
    Scene_Orothe_Dock_Western_Ferry: "Ferry",
    Scene_Orothe_Dock_Eastern_Ferry: "Ferry",
    Scene_Orothe_Ocean_Ferry: "Ferry",
    Scene_Naroom_Gia_House_Normal: "Gia's Farm",
    Scene_Naroom_Gia_Room: "Gia's Farm",
    Scene_Naroom_Weave_Entrance: "Weave",
    Scene_Naroom_Weave_Ponds: "Weave",
    Scene_Naroom_Weave_River: "Weave",
    Scene_Naroom_Windmill_Outside: "Wheat Farm",
    Scene_Naroom_Weave_Exit: "Weave",
    Scene_Naroom_Weave_KeyMaze: "Weave",
    Scene_Underneath_Tunnels_Outside: "Underneath Tunnels",
    Scene_Naroom_Windmill_Room: "Wheat Farm",
    Scene_Naroom_Glade_Cave_Entrance: "Naroom Cave",
    Scene_Orothe_Dock_Eastern_Empty: "Ferry",
    Scene_Orothe_Dock_Western_Empty: "Ferry",
    Scene_Naroom_Gia_House_Destroyed: "Gia's Farm",
    // Set: Orothe
    Scene_Orothe_Mar_Town: "Oscent Mar",
    Scene_Orothe_Mar_InnRoom: "Oscent Mar Inn",
    Scene_Orothe_Mar_MobisRoom: "Oscent Mar",
    Scene_Orothe_Mar_LibraryRoom: "Oscent Mar Library",
    Scene_Orothe_Tunnels_PathwayMarUnderwater_Unused: "Hacking! Unused Location!",
    Scene_Orothe_Coral_Entrance: "Orothe Corals",
    Scene_Orothe_Coral_PathwayHorizontal: "Orothe Corals",
    Scene_Orothe_Coral_PathwayVertical: "Orothe Corals",
    Scene_Orothe_Coral_End: "Orothe Corals",
    Scene_Orothe_Coral_TunnelsChute: "Orothe Corals",
    Scene_Orothe_Geyser_Pathway: "Orothe Geyser",
    Scene_Orothe_Geyser_Middle: "Orothe Geyser",
    Scene_Orothe_Geyser_North: "Orothe Geyser",
    Scene_Orothe_Geyser_East: "Orothe Geyser",
    Scene_Orothe_Geyser_South: "Orothe Geyser",
    Scene_Orothe_Geyser_West: "Orothe Geyser",
    Scene_Orothe_Geyser_SouthwestPathway: "Orothe Geyser",
    Scene_Orothe_Geyser_SoutheastPathway: "Orothe Geyser",
    Scene_Orothe_Geyser_Southeast: "Orothe Geyser",
    Scene_Orothe_Geyser_Southwest: "Orothe Geyser",
    Scene_Orothe_Geyser_Currents: "Orothe Geyser",
    Scene_Orothe_Geyser_Entrance: "Orothe Geyser",
    Scene_Orothe_Geyser_CoreStone: "Orothe Geyser",
    Scene_Orothe_Island_Room: "Orothe Island",
    Scene_Orothe_Island_Outside: "Orothe Island",
    Scene_Orothe_Ruins_Entrance: "Underwater Ruins",
    Scene_Orothe_Ruins_Blurry: "Underwater Ruins",
    Scene_Orothe_Ruins_Southwest: "Underwater Ruins",
    Scene_Orothe_Tunnels_Entrance: "Orothe Tunnels",
    Scene_Orothe_Tunnels_IntersectionMain: "Orothe Tunnels",
    Scene_Orothe_Tunnels_PathwayMarA: "Orothe Tunnels",
    Scene_Orothe_Tunnels_PathwayMarB: "Orothe Tunnels",
    Scene_Orothe_Tunnels_Whirlpool: "Orothe Tunnels",
    Scene_Orothe_Tunnels_Alcove: "Orothe Tunnels",
    Scene_Orothe_Tunnels_IntersectionCache: "Orothe Tunnels",
    Scene_Orothe_Tunnels_Cache: "Orothe Tunnels",
    Scene_Orothe_Tunnels_VaultEntrance: "Orothe Vault",
    Scene_Orothe_Tunnels_VaultRoom: "Orothe Vault",
    Scene_Orothe_Tunnels_PathwayMarUnderwater: "Orothe Tunnels",
    Scene_Orothe_Ocean_Raft: "Ocean",
    // Set: Shadowhold
    Scene_Core_Shadowhold_Middle_StartCells: "Shadowhold",
    Scene_Core_Shadowhold_Middle_Door: "Shadowhold",
    Scene_Core_Shadowhold_Marina_Start: "Shadowhold",
    Scene_Core_Shadowhold_Marina_FalseIntersection: "Shadowhold",
    Scene_Core_Shadowhold_Marina_Room: "Shadowhold",
    Scene_Core_Shadowhold_Marina_Pathway: "Shadowhold",
    Scene_Core_Shadowhold_Marina_Jump: "Shadowhold Marina",
    Scene_Core_Shadowhold_Middle_FirstPuzzle: "Shadowhold",
    Scene_Core_Shadowhold_Middle_FirstPathway: "Shadowhold",
    Scene_Core_Shadowhold_Middle_FirstIntersection: "Shadowhold",
    Scene_Core_Shadowhold_Middle_NorthPathway_Door: "Shadowhold",
    Scene_Core_Shadowhold_Middle_NorthPathway_Cells: "Shadowhold",
    Scene_Core_Shadowhold_Middle_SouthPathway_Cell: "Shadowhold",
    Scene_Core_Shadowhold_Middle_SouthPathway_ScrewRoom: "Shadowhold",
    Scene_Core_Shadowhold_Middle_EastPathway_Door: "Shadowhold",
    Scene_Core_Shadowhold_Middle_EastPathway_BigPuzzle: "Shadowhold",
    Scene_Core_Shadowhold_Middle_EastPathway_ArrowRoom: "Shadowhold",
    Scene_Core_Shadowhold_Labyrinth_Entrance: "Shadowhold",
    Scene_Core_Shadowhold_Labyrinth_South: "Shadowhold",
    Scene_Core_Shadowhold_Labyrinth_North: "Shadowhold",
    Scene_Core_Shadowhold_Labyrinth_PuzzlePathway: "Shadowhold",
    Scene_Core_Shadowhold_Deep_Cells: "Shadowhold",
    Scene_Core_Shadowhold_Deep_Intersection: "Shadowhold",
    Scene_Core_Shadowhold_Deep_FirstPuzzle: "Shadowhold",
    Scene_Core_Shadowhold_Deep_TwoPuzzles: "Shadowhold",
    Scene_Core_Shadowhold_Deep_SouthPathway: "Shadowhold",
    Scene_Core_Shadowhold_Deep_NorthPathway: "Shadowhold",
    Scene_Core_Shadowhold_Deep_End: "Shadowhold",
    Scene_Core_Smith_Smith: "Core Ringsmith",
    Scene_Core_Smith_Backyard_Entrance: "Core Ringsmith's Playground",
    Scene_Core_Smith_Backyard_Pathway: "Core Ringsmith's Playground",
    Scene_Core_Smith_Backyard_End: "Core Ringsmith's Playground",
    // Set: Core
    Scene_Core_End_Bridge: "Core",
    Scene_Core_End_Agram: "Core Throne Room",
    Scene_Core_End_Entrance: "Core",
    Scene_Core_End_Pathway: "Core",
    Scene_Core_End_Room: "Core",
    Scene_Core_End_Field: "Core",
    Scene_Core_End_Antechamber: "Core",
    // Set: Hidden/Fort
    Scene_Underneath_Mushroom_Room_UNUSED1: "Hacking! Unused Location!",
    Scene_Underneath_Mushroom_Room_UNUSED2: "Hacking! Unused Location!",
    Scene_Underneath_Fort_Outside: "Abandoned Tower",
    Scene_Underneath_Fort_GroundFloorRoom: "Abandoned Tower",
    Scene_Underneath_Fort_SecondFloorRoom_OpenDoor: "Abandoned Tower",
    Scene_Underneath_Fort_SecondFloorRoom_ClosedDoor: "Abandoned Tower",
    Scene_Arderial_Fort_Outside: "Abandoned Tower",
    Scene_Arderial_Fort_UNUSED: "Hacking! Unused Location!",
    Scene_Naroom_Forest_Puzzle_CacheRoom: "Naroom Forest",
    Scene_Naroom_Forest_Puzzle_CacheRoom_BlastRoom: "Naroom Forest",
    Scene_Underneath_Tunnels_Hyren_Entrance: "Underneath Tunnels",
    Scene_Underneath_Tunnels_Hyren_Exit: "Underneath Tunnels",
    Scene_Cald_Caverns_PathwayU_CacheRoom_UNUSED1: "Hacking! Unused Location!",
    Scene_Cald_Caverns_PathwayU_CacheRoom_UNUSED2: "Hacking! Unused Location!",
    Scene_Cald_Caverns_PathwayU_CacheRoom: "East Lava Tubes' Secret Room",
    Scene_Misc_StartScreen_Main: "Start Screen",
    Scene_Misc_StartScreen_Pathway: "Hacking! Unused Location!",
    Scene_Misc_StartScreen_Jukebox: "Hacking! Unused Location!",
    Scene_Underneath_Mushroom_GrukRoom_BasementRoom: "Gruk's Mushroom Farm",
    Scene_Underneath_Mushroom_GrukRoom_TeleportCore: "Gruk's Mushroom Farm",
    Scene_Naroom_Glade_Cave_TeleportCore: "Naroom-Underneath Shortcut",
    Scene_Underneath_Tunnels_Hyren_IntersectionCald: "Underneath Tunnels",
    Scene_Underneath_Tunnels_FortConnectionCacheRoom: "Underneath Tunnels",
    Scene_Naroom_Vash_ChallengeAgovo: "Avoid the Agovos",
    Scene_Underneath_EastTunnel_Intersection_BlastRoom: "Underneath Tunnels",
    Scene_Underneath_Tunnels_Loop_PathwayLoopEndEastCacheIntersections_BlastRoom: "Underneath Tunnels",
    Scene_Underneath_Tunnels_Exit_CacheRoom: "Underneath Tunnels",
    Scene_Underneath_Tunnels_Exit_CacheRoom_RockRoom: "Underneath Tunnels",
    Scene_Misc_Teleport_UNUSED1: "Hacking! Unused Location!",
    Scene_Misc_Teleport_UNUSED2: "Hacking! Unused Location!",
    Scene_Misc_Teleport_UNUSED3: "Hacking! Unused Location!",
    Scene_Arderial_Fort_TeleportNaroom: "Arderial Fort",
    Scene_Naroom_Vash_Sky_TeleportArderialRoom: "Vash Naroom",
    Scene_Core_Smith_TeleportNaroom: "Naroom-Underneath Shortcut",
    Scene_Core_Smith_TeleportUnderneath: "Naroom-Underneath Shortcut",
    // Set: Overworld
    Scene_Overworld_Naroom: "Naroom Overworld",
    Scene_Overworld_Underneath: "Underneath Overworld",
    Scene_Overworld_Cald: "Cald Overworld",
    Scene_Overworld_Orothe: "Orothe Overworld",
    Scene_Overworld_Arderial: "Arderial Overworld",
    // Set: Cald
    Scene_Cald_Geyser_Entrance: "Cald Geyser",
    Scene_Cald_Geyser_PuzzlesA: "Cald Geyser",
    Scene_Cald_Geyser_PuzzlesB: "Cald Geyser",
    Scene_Cald_Geyser_Antechamber: "Cald Geyser",
    Scene_Cald_Geyser_CoreStone: "Cald Geyser",
    Scene_Cald_Volcano_Hyren: "Volcano",
    Scene_Cald_Ashyn_NorthGeyser: "Ashyn",
    Scene_Cald_Ashyn_Center: "Ashyn",
    Scene_Cald_Ashyn_West: "Ashyn",
    Scene_Cald_Ashyn_East: "Ashyn",
    Scene_Cald_Ashyn_SouthBridge: "Ashyn",
    Scene_Cald_Ashyn_Center_HistorianRoom: "Ashyn Historian's House",
    Scene_Cald_Ashyn_Center_ErynRoom: "Eryn and Karyn's House",
    Scene_Cald_Ashyn_Center_AshgarRoom: "Ashgar's House",
    Scene_Cald_Ashyn_East_Room: "Ashyn",
    Scene_Cald_Ashyn_West_InnRoom: "Ashyn Inn",
    Scene_Cald_Ashyn_West_SmithRoom: "Magam's Ring Shop",
    Scene_Cald_Valkan_House: "Valkan's House",
    Scene_Cald_Valkan_Room: "Valkan's House",
    Scene_Cald_Ashyn_UNUSED: "Hacking! Unused Location!",
    Scene_Cald_Caverns_Entrance: "East Lava Tubes",
    Scene_Cald_Caverns_PathwayEntranceHorizontal: "East Lava Tubes",
    Scene_Cald_Caverns_IntersectionX: "East Lava Tubes",
    Scene_Cald_Caverns_PathwayZ: "East Lava Tubes",
    Scene_Cald_Caverns_Pathway7: "East Lava Tubes",
    Scene_Cald_Caverns_PathwayI: "East Lava Tubes",
    Scene_Cald_Caverns_IntersectionTriple: "East Lava Tubes",
    Scene_Cald_Caverns_Detour_Pathway: "East Lava Tubes",
    Scene_Cald_Caverns_Detour_End: "East Lava Tubes",
    Scene_Cald_Caverns_PathwayU: "East Lava Tubes",
    Scene_Cald_Caverns_PathwayExitHorizontal: "East Lava Tubes",
    Scene_Cald_Caverns_Exit: "East Lava Tubes",
    Scene_Cald_Tunnels_Entrance: "West Lava Tubes",
    Scene_Cald_Tunnels_IntersectionNorth: "West Lava Tubes",
    Scene_Cald_Tunnels_PathwayWest: "West Lava Tubes",
    Scene_Cald_Tunnels_PathwayCenter: "West Lava Tubes",
    Scene_Cald_Tunnels_PathwayEast: "West Lava Tubes",
    Scene_Cald_Tunnels_IntersectionExit: "West Lava Tubes",
    Scene_Cald_Vents_PathwayA: "Lava Vents",
    Scene_Cald_Vents_PathwayB: "Lava Vents",
    Scene_Cald_Vents_Intersection: "Lava Vents",
    Scene_Cald_Vents_PathwayIsland: "Lava Vents",
    Scene_Cald_Vents_Island: "Lava Vents",
    Scene_Cald_Vents_BrokenBridge: "Lava Vents",
    Scene_Cald_Vents_Entrance: "Lava Vents",
    Scene_Cald_Vents_BrokenBridgeEnd: "Lava Vents",
    Scene_Cald_Vents_CacheRoomA: "Lava Vents",
    Scene_Cald_Vents_CacheRoomB: "Lava Vents",
    Scene_Cald_Vents_CacheRoomC: "Lava Vents",
    Scene_Cald_Vents_PathwayIsland_RescueRoom: "Lava Vents",
    // Set: Arderial
    Scene_Arderial_Palace_Outside: "Arderial Palace",
    Scene_Arderial_Inn_Outside: "Arderial Inn",
    Scene_Arderial_Historian_Outside: "Arderial Historian",
    Scene_Arderial_Shop_Outside: "Arderial Shop",
    Scene_Arderial_Palace_EntranceRoom: "Arderial Palace",
    Scene_Arderial_Palace_DoubleRoom: "Arderial Palace",
    Scene_Arderial_Palace_SecondFloorRoom: "Arderial Palace",
    Scene_Arderial_Middle_House_BasementRoom: "Hacking! Unused Location!",
    Scene_Arderial_Historian_WestRoom: "Arderial Historian",
    Scene_Arderial_Historian_UpstairsRoom: "Arderial Historian",
    Scene_Arderial_Shop_Room: "Lasada's Ring Shop",
    Scene_Arderial_Historian_EastRoom: "Arderial Historian",
    Scene_Arderial_Geyser_Remix_Arderial_Entrance: "Arderial Geyser",
    Scene_Arderial_Geyser_Remix_Arderial_KeyMaze: "Arderial Geyser",
    Scene_Arderial_Geyser_Remix_Underneath_West: "Arderial Geyser",
    Scene_Arderial_Geyser_Remix_Cald_West: "Arderial Geyser",
    Scene_Arderial_Geyser_Remix_Underneath_East: "Arderial Geyser",
    Scene_Arderial_Geyser_Remix_Cald_East: "Arderial Geyser",
    Scene_Arderial_Geyser_Remix_Cache_East: "Arderial Geyser",
    Scene_Arderial_Geyser_Remix_Cache_West: "Arderial Geyser",
    Scene_Arderial_Geyser_Remix_Naroom_West: "Arderial Geyser",
    Scene_Arderial_Geyser_Remix_Naroom_East: "Arderial Geyser",
    Scene_Arderial_Geyser_Remix_Orothe_West: "Arderial Geyser",
    Scene_Arderial_Geyser_Remix_Orothe_East: "Arderial Geyser",
    Scene_Arderial_Geyser_Pipes1_Entrance: "Arderial Geyser",
    Scene_Arderial_Geyser_Pipes1_Entrance_BackroomCache: "Arderial Geyser",
    Scene_Arderial_Geyser_Pipes1_StarryCache: "Arderial Geyser",
    Scene_Arderial_Geyser_Pipes1_PipeToStarryCache: "Arderial Geyser",
    Scene_Arderial_Geyser_Pipes1_MiddlePipeSwitch: "Arderial Geyser",
    Scene_Arderial_Geyser_Pipes1_End: "Arderial Geyser",
    Scene_Arderial_Geyser_Pipes2_Entrance: "Arderial Geyser",
    Scene_Arderial_Geyser_Pipes2_PipeAnalysis: "Arderial Geyser",
    Scene_Arderial_Geyser_Pipes2_MiddlePipeSwitch: "Arderial Geyser",
    Scene_Arderial_Geyser_Pipes2_End: "Arderial Geyser",
    Scene_Arderial_Geyser_End_GlassMaze: "Arderial Geyser",
    Scene_Arderial_Geyser_End_CoreStone: "Arderial Geyser",
    Scene_Arderial_Geyser_Pipes2_GlassField: "Arderial Geyser",
    Scene_Arderial_Geyser_End_CaldCache: "Arderial Geyser",
    Scene_Arderial_Middle_Entrance: "Middle Clouds",
    Scene_Arderial_Middle_PathwayEntrance: "Middle Clouds",
    Scene_Arderial_Middle_Intersection: "Middle Clouds",
    Scene_Arderial_Middle_PathwayHouse: "Middle Clouds",
    Scene_Arderial_Middle_House: "Middle Clouds",
    Scene_Arderial_Middle_End: "Middle Clouds",
    Scene_Arderial_North_SoutheastEntrance: "North Clouds",
    Scene_Arderial_North_Southwest: "North Clouds",
    Scene_Arderial_North_East: "North Clouds",
    Scene_Arderial_North_Center: "North Clouds",
    Scene_Arderial_North_West: "North Clouds",
    Scene_Arderial_North_Northeast: "North Clouds",
    Scene_Arderial_North_NorthwestExit: "North Clouds",
    Scene_Arderial_Entrance: "Palace Clouds",
    Scene_Arderial_South_North: "South Clouds",
    Scene_Arderial_South_South: "South Clouds",
    Scene_Arderial_Palace_Throneroom: "Arderial Throne Room",
    Scene_Arderial_Inn_Room: "Arderial Inn",
    Scene_Arderial_Geyser_HorizontalPipe_Unused: "Hacking! Unused Location!",
    Scene_Arderial_Geyser_VerticalPipe_Unused: "Hacking! Unused Location!",
    // Set: Misc
    Scene_Misc_Whackamole_Debug: "Hacking! Developer's Warp Zone!",
    Scene_Misc_MagiNationSplashScreen: "Start Screen",
}
// End of autogenerated scene_to_rascript.py

gamecount_lookup = {
    0: "Booting up Magi-Nation for the first time",
    GC_OPENING: "Dunked in the Naroom river",
    GC_NRM_INTRO: "Running errands in Vash Naroom",
    GC_FIND_ORWIN: "Searching for Orwin",
    GC_QUEST_FOR_GIA: "Heading to see Gia",
    GC_NAROOM_GEYSER: "Facing the first Shadow Geyser",
    GC_GLOVES: "End of the first Shadow Geyser", // Changes at start of geyser boss fight
    GC_UND_INTRO: "Exploring the Underneath",
    GC_UND_QUAKE: "Investigating another earthquake",
    GC_UND_GEYSER: "Facing the second Shadow Geyser",
    GC_UND_WASTED: "End of the second Shadow Geyser", // Changes at start of geyser boss battle
    GC_CALD_INTRO: "Leaving the Underneath",
    GC_ARBOLL_HUNT: "Hunting for that blasted Lava Arboll",
    GC_LAVA_BRIDGE: "Building a bridge",
    GC_BOOTS_QUEST: "Getting a nice pair of boots",
    GC_CALD_GEYSER: "Facing the third Shadow Geyser",
    GC_TONY_KIDNAPPED: "Having a party",
    GC_SHADOWHOLD_JAIL: "In a pickle",
    GC_BACK_IN_OROTHE: "Swimming with turtles",
    GC_OROTHE_GEYSER: "Facing the fourth Shadow Geyser",
    GC_BEAT_OROTHE: "Destroyed the fourth Shadow Geyser",
    GC_FALSE_END: "Heading home",
    GC_ARDERIAL: "Meeting the Queen",
    GC_ARDERIAL_GEYSER: "Met the Queen",
    GC_AGRAM_BATTLE: "Facing the Core",
    GC_END_FUNERAL: "Attending a funeral",
    GC_END_PARTY: "Life of the party",
    GC_END_BAD: "Accepted Agram's offer",
    GC_END_NORMAL: "Beat the game!",
}

creature_lookup = {
    Creature_Abaquist: "Abaquist",
    Creature_Agovo: "Agovo",
    Creature_Alaban: "Alaban",
    Creature_Arbolit: "Arbolit",
    Creature_Arboll: "Arboll",
    Creature_Ayebaw: "Ayebaw",
    Creature_Balamant: "Balamant",
    Creature_Bhatar: "Bhatar",
    Creature_Bisiwog: "Bisiwog",
    Creature_BlackAgovo: "Black Agovo",
    Creature_Borgor: "Borgor",
    Creature_Brub: "Brub",
    Creature_Bwill: "Bwill",
    Creature_CaveHyren: "Cave Hyren",
    Creature_CaveRudwot: "Cave Rudwot",
    Creature_ChaosJile: "Chaos Jile",
    Creature_ChaosPlith: "Chaos Plith",
    Creature_CoralHyren: "Coral Hyren",
    Creature_CoreHyren: "Core Hyren",
    Creature_DarkAyebaw: "Dark Ayebaw",
    Creature_DarkbreedHyren: "Darkbreed Hyren",
    Creature_DarkFurok: "Dark Furok",
    Creature_DarkVellup: "Dark Vellup",
    Creature_DeepHyren: "Deep Hyren",
    Creature_Diobor: "Diobor",
    Creature_Drakan: "Drakan",
    Creature_Drush: "Drush",
    Creature_DryteFiend: "Dryte Fiend",
    Creature_Eebit: "Eebit",
    Creature_Epik: "Epik",
    Creature_Ergar: "Ergar",
    Creature_FlameHyren: "Flame Hyren",
    Creature_Furok: "Furok",
    Creature_GhostBwisp: "Ghost Bwisp",
    Creature_GiantKorit: "Giant Korit",
    Creature_Gorath: "Gorath",
    Creature_Grax: "Grax",
    Creature_Grubble: "Grubble",
    Creature_GumGum: "GumGum",
    Creature_Harban: "Harban",
    Creature_HunterJile: "Hunter Jile",
    Creature_Jore: "Jore",
    Creature_Karak: "Karak",
    Creature_Kelthet: "Kelthet",
    Creature_Koil: "Koil",
    Creature_LavaAq: "Lava Aq",
    Creature_LavaArboll: "Lava Arboll",
    Creature_LavaBalamant: "Lava Balamant",
    Creature_LeafHyren: "Leaf Hyren",
    Creature_LightningHyren: "Lightning Hyren",
    Creature_MagmaHyren: "Magma Hyren",
    Creature_MagmaJile: "Magma Jile",
    Creature_Megathan: "Megathan",
    Creature_MushroomHyren: "Mushroom Hyren",
    Creature_OrathanFlyer: "Orathan Flyer",
    Creature_Orish: "Orish",
    Creature_Ormagon: "Ormagon",
    Creature_Orpus: "Orpus",
    Creature_Paralit: "Paralit",
    Creature_Parmalag: "Parmalag",
    Creature_Platheus: "Platheus",
    Creature_Plith: "Plith",
    Creature_Pyloluf: "Pyloluf",
    Creature_Quor: "Quor",
    Creature_Rabbage: "Rabbage",
    Creature_Raxis: "Raxis",
    Creature_Rudwot: "Rudwot",
    Creature_ShadowKarak: "Shadow Karak",
    Creature_ShadowVinoc: "Shadow Vinoc",
    Creature_Shryque: "Shryque",
    Creature_Sphor: "Sphor",
    Creature_Szalak: "Szalak",
    Creature_ThunderHyren: "Thunder Hyren",
    Creature_ThunderVashp: "Thunder Vashp",
    Creature_TimberHyren: "Timber Hyren",
    Creature_Tragan: "Tragan",
    Creature_TreeHinko: "TreeHinko",
    Creature_Twee: "Twee",
    Creature_Vellup: "Vellup",
    Creature_Vinoc: "Vinoc",
    Creature_Vulbor: "Vulbor",
    Creature_Wasperine: "Wasperine",
    Creature_Weebat: "Weebat",
    Creature_Weebo: "Weebo",
    Creature_Weethan: "Weethan",
    Creature_Xyx: "Xyx",
    Creature_Placeholder1: "Placeholder",
    Creature_Placeholder2: "Placeholder",
    Creature_Dan: "Dan",
    Creature_Togoth: "Togoth",
    Creature_Ogar: "Ogar",
    Creature_Korremar: "Korremar",
    Creature_Warrada: "Warrada",
    Creature_Korg: "Korg",
    Creature_Zet: "Zet",
    Creature_Morag: "Morag",
    Creature_Agram: "Agram",
    Creature_Agram2: "Agram",
    Creature_Agram3: "Agram",
    Creature_ShadowMagi1: "ShadowMagi",
    Creature_ShadowMagi2: "ShadowMagi",
    Creature_ShadowMagi3: "ShadowMagi",
    Creature_ShadowMagi4: "ShadowMagi",
    Creature_ShadowMagi5: "ShadowMagi",
    Creature_ShadowMagi6: "ShadowMagi",
    Creature_ShadowMagi7: "ShadowMagi",
    Creature_ShadowMagi8: "ShadowMagi",
    Creature_Salafy: "Salafy",
    Creature_Null: "",
}

newgameplus_lookup = {
    1: "(NG+) "
}

rich_presence_conditional_display(
    splash_screen(),
    "Splash Screen"
)
rich_presence_conditional_display(
    scene_id() == Scene_Misc_StartScreen_Main,
    "Start Screen"
)

function battle_creature(slot) =>
    get_creature(1, slot, Creature_Offset_ID)
// Check to see if we add a comma
// We add a comma if
//  1) The current slot is not null (left), AND
//  2) At least 1 creature to the right of the slot is not null (right)
function commas(slot) {
    left = battle_creature(slot)/Creature_Null
    if(slot <= BattleCreature_Ally4) {
        last = BattleCreature_Ally4
    } else {
        last = BattleCreature_Magi
    }
    left_total = 0
    right_total = 0
    for i in range(slot + 1, last) {
        left_total = left_total + left
        right_total = right_total + battle_creature(i)/Creature_Null
    }
    return left_total + right_total
}
comma_lookup1 = {
    0: ", ",
}
comma_lookup2 = {
    0: ", ",
    1: ", ",
}
comma_lookup3 = {
    0: ", ",
    1: ", ",
    2: ", ",
}
comma_lookup4 = {
    0: ", ",
    1: ", ",
    2: ", ",
    3: ", ",
}
rich_presence_conditional_display(
    in_battle(),
    "{0}Mission: {1}. Location: {2}. Level {3} ({4}/{5}). {6}{7}{8}{9}{10}{11}{12} vs {13}{14}{15}{16}{17}{18}{19}{20}{21}",
    rich_presence_lookup("NewGamePlus", Newgame_Plus, newgameplus_lookup),
    rich_presence_lookup("GameCount", GameCount, gamecount_lookup, "???"),
    rich_presence_lookup("SceneName", scene_id(), scene_lookup, "???"),
    rich_presence_value("DanLevel", dan_level()),
    rich_presence_value("DanCurEnergy", dan_cur_energy()),
    rich_presence_value("DanMaxEnergy", dan_max_energy()),
    rich_presence_lookup("Creature", battle_creature(BattleCreature_Ally1), creature_lookup),
    rich_presence_lookup("Comma3", commas(BattleCreature_Ally1), comma_lookup3),
    rich_presence_lookup("Creature", battle_creature(BattleCreature_Ally2), creature_lookup),
    rich_presence_lookup("Comma2", commas(BattleCreature_Ally2), comma_lookup2),
    rich_presence_lookup("Creature", battle_creature(BattleCreature_Ally3), creature_lookup),
    rich_presence_lookup("Comma1", commas(BattleCreature_Ally3), comma_lookup1),
    rich_presence_lookup("Creature", battle_creature(BattleCreature_Ally4), creature_lookup),
    rich_presence_lookup("Creature", battle_creature(BattleCreature_Enemy1), creature_lookup),
    rich_presence_lookup("Comma4", commas(BattleCreature_Enemy1), comma_lookup4),
    rich_presence_lookup("Creature", battle_creature(BattleCreature_Enemy2), creature_lookup),
    rich_presence_lookup("Comma3", commas(BattleCreature_Enemy2), comma_lookup3),
    rich_presence_lookup("Creature", battle_creature(BattleCreature_Enemy3), creature_lookup),
    rich_presence_lookup("Comma2", commas(BattleCreature_Enemy3), comma_lookup2),
    rich_presence_lookup("Creature", battle_creature(BattleCreature_Enemy4), creature_lookup),
    rich_presence_lookup("Comma1", commas(BattleCreature_Enemy4), comma_lookup1),
    rich_presence_lookup("Creature", battle_creature(BattleCreature_Magi), creature_lookup)
)
/*rich_presence_display(
    "{0}Mission: {1}. Location: {2}. Level {3} ({4}/{5}).",
    rich_presence_lookup("NewGamePlus", Newgame_Plus, newgameplus_lookup),
    rich_presence_lookup("GameCount", GameCount, gamecount_lookup, "???"),
    rich_presence_lookup("SceneName", scene_id(), scene_lookup, "???"),
    rich_presence_value("DanLevel", dan_level()),
    rich_presence_value("DanCurEnergy", dan_cur_energy()),
    rich_presence_value("DanMaxEnergy", dan_max_energy())
)*/ //TODO currently using debug RP, replace with this commented out RP

/////////////////////
// Debug Functions //
/////////////////////
rich_presence_display(
    "Scene: {0} - {1} Script1: {2} Script2: {3} Script3: {4} Script4: {5} Script5: {6} Script6: {7} GameCount: {8}",
    rich_presence_value("SceneID", scene_id(), "VALUE"),
    rich_presence_lookup("SceneName", scene_id(), scene_lookup, "???"),
    rich_presence_value("Script1", get_nth_script(1), "VALUE"),
    rich_presence_value("Script2", get_nth_script(2), "VALUE"),
    rich_presence_value("Script3", get_nth_script(3), "VALUE"),
    rich_presence_value("Script4", get_nth_script(4), "VALUE"),
    rich_presence_value("Script5", get_nth_script(5), "VALUE"),
    rich_presence_value("Script6", get_nth_script(6), "VALUE"),
    rich_presence_value("GameCountValue", GameCount, "VALUE")
)

for i in range(1, 8) {
    leaderboard(
        title = "Track Script Frame " + i,
        description = "",
        start = Ticker_byte == 0x01,
        cancel = always_false(),
        submit = always_false(),
        value = get_nth_script(i),
        format = "VALUE",
        lower_is_better = false,
        id = 0
    )
}

leaderboard(
    title = "SceneID",
    description = "Debug display of SceneID",
    start = Ticker_byte == 0x01,
    cancel = always_false(),
    submit = always_false(),
    value = scene_id(),
    format = "VALUE",
    lower_is_better = false,
    id = 0
)


